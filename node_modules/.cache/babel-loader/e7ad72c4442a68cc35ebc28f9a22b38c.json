{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport './home.css';\nimport { axiosService } from '../../service/axios';\n\nfunction Home() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      legendFormat = _useState2[0],\n      setLegendFormat = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tooltipsNumber = _useState4[0],\n      setTooltipsNumber = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tooltipsAmount = _useState6[0],\n      setTooltipsAmount = _useState6[1];\n\n  var _useState7 = useState({\n    labels: [],\n    datasets: [{}]\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataValue = _useState8[0],\n      setDataValue = _useState8[1];\n\n  var _useState9 = useState({\n    labels: [],\n    datasets: [{}]\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataMaxValue = _useState10[0],\n      setDataMaxValue = _useState10[1];\n\n  var _useState11 = useState({\n    labels: [],\n    datasets: [{}]\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataMaxSize = _useState12[0],\n      setDataMaxSize = _useState12[1];\n\n  useEffect(function () {\n    loadDashProductValue();\n    loadDashProductSize();\n    legendFormatter();\n  }, []);\n\n  function loadDashProductValue() {\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  function _loadDashProductValue() {\n    _loadDashProductValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              axiosService({\n                method: 'GET',\n                url: '/recycling/mktProductValue',\n                params: {\n                  page: 0,\n                  size: 5\n                }\n              }).then(function (response) {\n                var resp = [];\n                var maxValues = [];\n                var minValues = [];\n                var averageValues = [];\n                var products = [];\n                console.log(response);\n                resp = response.data.listRecyclingProductsValue;\n                resp.forEach(function (p) {\n                  maxValues.push(parseFloat(p.maxValue.replace(',', '.')));\n                  minValues.push(parseFloat(p.minValue.replace(',', '.')));\n                  averageValues.push(parseFloat(p.averageValue.replace(',', '.')));\n                  products.push(p.product.product);\n                });\n                setDataMaxValue({\n                  labels: products,\n                  datasets: [{\n                    label: 'valor máximo/Kg',\n                    backgroundColor: '#B9C400',\n                    data: maxValues\n                  }]\n                });\n                setDataValue({\n                  labels: products,\n                  datasets: [{\n                    label: 'valor mínimo/Kg',\n                    backgroundColor: '#BADFD7',\n                    data: minValues\n                  }, {\n                    label: 'valor máximo/Kg',\n                    backgroundColor: '#B9C400',\n                    data: maxValues\n                  }, {\n                    label: 'valor médio/Kg',\n                    backgroundColor: '#B9C598',\n                    data: averageValues\n                  }]\n                });\n                formatToolTips('amount');\n              }).catch(function (error) {});\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  ;\n\n  function loadDashProductSize() {\n    return _loadDashProductSize.apply(this, arguments);\n  }\n\n  function _loadDashProductSize() {\n    _loadDashProductSize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              axiosService({\n                method: 'GET',\n                url: '/recycling/mktProductSize',\n                params: {\n                  page: 0,\n                  size: 5\n                }\n              }).then(function (response) {\n                var resp = [];\n                var values = [];\n                var products = [];\n                console.log(response);\n                resp = response.data.listRecyclingProductsValue;\n                resp.forEach(function (p) {\n                  values.push(p.countMktProducts);\n                  products.push(p.product.product);\n                });\n                setDataMaxSize({\n                  labels: products,\n                  datasets: [{\n                    label: 'quantidade',\n                    borderWidth: 0,\n                    backgroundColor: ['#547F82', '#5B7813', '#00AB97', '#B9C400'],\n                    data: values\n                  }]\n                });\n                formatToolTips('number');\n              }).catch(function (error) {});\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _loadDashProductSize.apply(this, arguments);\n  }\n\n  ;\n\n  function formatToolTips(type) {\n    console.log(type);\n\n    if (type === 'amount') {\n      setTooltipsAmount({\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var unit = 'R$ '; // var label = data.datasets[tooltipItem.datasetIndex].label;\n            // label = (label) ? label + ': ' + unit + ' ' : ''\n\n            return unit + tooltipItem.value.toString().replace('.', ',');\n          }\n        }\n      });\n    }\n\n    if (type === 'number') {\n      setTooltipsNumber({\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.value.toString();\n          }\n        }\n      });\n    }\n  }\n\n  function legendFormatter() {\n    setLegendFormat({\n      legend: {\n        display: true,\n        position: 'bottom',\n        labels: {\n          boxWidth: 15\n        }\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerResultFind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '10px',\n      padding: '20px',\n      backgroundColor: '#F3F6F6',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: '#2B4748',\n      fontSize: '14px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 113\n    }\n  }, \"Produtos com maior valor pago por Kg\")), /*#__PURE__*/React.createElement(Bar, {\n    height: 250,\n    width: 250,\n    data: dataMaxValue,\n    options: {\n      title: {\n        display: true,\n        text: '',\n        fontSize: 14\n      },\n      legend: legendFormat,\n      tooltips: tooltipsAmount\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '10px',\n      padding: '20px',\n      backgroundColor: '#F3F6F6',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: '#2B4748',\n      fontSize: '14px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 117\n    }\n  }, \"Produtos com mais anunciados.\")), /*#__PURE__*/React.createElement(Bar, {\n    height: 250,\n    width: 250,\n    data: dataValue,\n    options: {\n      title: {\n        display: true,\n        text: '',\n        fontSize: 14\n      },\n      legend: legendFormat,\n      tooltips: tooltipsNumber\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '10px',\n      padding: '20px',\n      backgroundColor: '#F3F6F6',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: '#2B4748',\n      fontSize: '14px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 113\n    }\n  }, \"Produtos com maior valor pago por Kg\")), /*#__PURE__*/React.createElement(Bar, {\n    height: 250,\n    width: 250,\n    data: dataMaxValue,\n    options: {\n      title: {\n        display: true,\n        text: '',\n        fontSize: 14\n      },\n      legend: legendFormat,\n      tooltips: tooltipsAmount\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '10px',\n      padding: '20px',\n      backgroundColor: '#F3F6F6',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: '#2B4748',\n      fontSize: '14px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 117\n    }\n  }, \"Produtos com mais anunciados.\")), /*#__PURE__*/React.createElement(Doughnut, {\n    height: 250,\n    width: 250,\n    data: dataMaxSize,\n    options: {\n      title: {\n        display: true,\n        text: '',\n        fontSize: 14\n      },\n      legend: legendFormat\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default Home; // console.log(resp)\n// resp.map(p => {\n//     products.push([\n//         p.product.product,\n//         parseFloat(p.averageValue.replace(',', '.'))\n//     ]);          \n// })\n// function googleChart() {\n//     return(\n//             <Chart\n//                             width='300px'\n//                             height='200px'\n//                             chartType=\"BarChart\"\n//                             data={data}\n//                             options={options, {\n//                                 // chartArea: { width: '100%' },\n//                                 // chartArea: { width: '50%', height: '70%' },\n//                                 title: 'Produtos com maior valor ofertado.',\n//                                 width: '200px',\n//                                 height: '200px',\n//                                 // responsive: true,\n//                                 bar: { groupWidth: '50%' },\n//                                 colors: ['#DDDF4B', '#2B4748'],\n//                                 // titlePosition: 'in',\n//                                 // axisTitlesPosition: 'in',\n//                                 // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \n//                                 legend: {position: 'bottom', textStyle: {color: '#2B4748', fontSize: 10}},\n//                                 hAxis: {format: 'currency'},\n//                                 // hAxis: {format: 'R$#,##',},\n//                                 // legend: {display: false}\n//                                 // legend: { width: '10%' },\n//                                 // isStacked: true,\n//                             }}\n//                             rootProps={{ 'data-testid': '3' }}\n//                         />\n//     )\n// }","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/pages/Home/index.js"],"names":["React","useEffect","useState","Bar","Doughnut","axiosService","Home","legendFormat","setLegendFormat","tooltipsNumber","setTooltipsNumber","tooltipsAmount","setTooltipsAmount","labels","datasets","dataValue","setDataValue","dataMaxValue","setDataMaxValue","dataMaxSize","setDataMaxSize","loadDashProductValue","loadDashProductSize","legendFormatter","method","url","params","page","size","then","response","resp","maxValues","minValues","averageValues","products","console","log","data","listRecyclingProductsValue","forEach","p","push","parseFloat","maxValue","replace","minValue","averageValue","product","label","backgroundColor","formatToolTips","catch","error","values","countMktProducts","borderWidth","type","callbacks","tooltipItem","unit","value","toString","legend","display","position","boxWidth","flexWrap","alignItems","justifyContent","margin","padding","borderRadius","width","color","fontSize","textAlign","title","text","tooltips"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Bar, Doughnut} from 'react-chartjs-2';\r\n\r\nimport './home.css';\r\nimport { axiosService } from '../../service/axios';\r\n\r\nfunction Home() {\r\n\r\n    const [legendFormat, setLegendFormat] = useState({})\r\n    const [tooltipsNumber, setTooltipsNumber] = useState({})\r\n    const [tooltipsAmount, setTooltipsAmount] = useState({})\r\n    const [dataValue, setDataValue] = useState({labels:[], datasets:[{}]})\r\n    const [dataMaxValue, setDataMaxValue] = useState({labels:[], datasets:[{}]})\r\n    const [dataMaxSize, setDataMaxSize] = useState({labels:[], datasets:[{}]})\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        loadDashProductValue();\r\n        loadDashProductSize();\r\n        legendFormatter();\r\n    },[]);\r\n\r\n    async function loadDashProductValue() {\r\n        axiosService({\r\n            method:'GET',\r\n            url:'/recycling/mktProductValue',\r\n            params:{\r\n                page:0,\r\n                size:5\r\n            }\r\n        }).then(response => {\r\n            let resp = [];\r\n            let maxValues = [];\r\n            let minValues = [];\r\n            let averageValues = [];\r\n            let products = [];\r\n            console.log(response)\r\n            resp = response.data.listRecyclingProductsValue;          \r\n            resp.forEach((p) => {\r\n                maxValues.push(parseFloat(p.maxValue.replace(',', '.')));\r\n                minValues.push(parseFloat(p.minValue.replace(',', '.')));\r\n                averageValues.push(parseFloat(p.averageValue.replace(',', '.')));\r\n                products.push(p.product.product)         \r\n            })\r\n            setDataMaxValue({\r\n                labels:products,\r\n                datasets:[{label: 'valor máximo/Kg', backgroundColor: '#B9C400',data:maxValues}]\r\n            })\r\n            setDataValue({\r\n                labels:products,\r\n                datasets:[\r\n                    {label: 'valor mínimo/Kg', backgroundColor: '#BADFD7',data:minValues},\r\n                    {label: 'valor máximo/Kg', backgroundColor: '#B9C400',data:maxValues},\r\n                    {label: 'valor médio/Kg', backgroundColor: '#B9C598',data:averageValues},\r\n                ]\r\n            })\r\n            formatToolTips('amount');           \r\n        }).catch(error => {\r\n        })\r\n    };\r\n\r\n    async function loadDashProductSize() {\r\n        axiosService({\r\n            method:'GET',\r\n            url:'/recycling/mktProductSize',\r\n            params:{\r\n                page:0,\r\n                size:5\r\n            }\r\n        }).then(response => {\r\n            let resp = [];\r\n            let values = [];\r\n            let products = [];\r\n            console.log(response)\r\n            resp = response.data.listRecyclingProductsValue;          \r\n            resp.forEach((p) => {\r\n                values.push(p.countMktProducts);\r\n                products.push(p.product.product)         \r\n            })\r\n            setDataMaxSize({\r\n                labels:products,\r\n                datasets:[{\r\n                    label: 'quantidade',\r\n                    borderWidth:0,\r\n                    backgroundColor: ['#547F82', '#5B7813', '#00AB97','#B9C400'],\r\n                    data:values\r\n                }]\r\n            })\r\n            formatToolTips('number');            \r\n        }).catch(error => {\r\n        })\r\n    };\r\n\r\n\r\n    function formatToolTips(type){\r\n        console.log(type)\r\n        if(type === 'amount') {\r\n            setTooltipsAmount({\r\n                callbacks: {            \r\n                    label: function(tooltipItem, data) {\r\n                        var unit = 'R$ ';\r\n                        // var label = data.datasets[tooltipItem.datasetIndex].label;\r\n                        // label = (label) ? label + ': ' + unit + ' ' : ''\r\n                        return unit + tooltipItem.value.toString().replace('.', ',');\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        if(type === 'number') {\r\n            setTooltipsNumber({\r\n                callbacks: {            \r\n                    label: function(tooltipItem, data) {\r\n                        return tooltipItem.value.toString();\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function legendFormatter() {\r\n        setLegendFormat({legend:{display:true, position:'bottom', labels:{boxWidth:15}}});\r\n    }\r\n        \r\n    return(\r\n        <div id='containerPage'>\r\n            <div id='containerResultFind'>\r\n                <div style={{display:'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent:'space-between'}}>\r\n                    <div style={{margin: '10px', padding:'20px', backgroundColor: '#F3F6F6', borderRadius: '5px'}}>\r\n                    <div style={{display:'flex', alignItems: 'center', justifyContent: 'center', width:'100%'}}><strong style={{color: '#2B4748', fontSize: '14px', textAlign:'center'}}>Produtos com maior valor pago por Kg</strong></div>\r\n                        <Bar\r\n                            height={250}\r\n                            width={250}\r\n                            data={dataMaxValue}\r\n                            options={{\r\n                                title:{display:true,text:'',fontSize:14},\r\n                                legend: legendFormat,     \r\n                                tooltips: tooltipsAmount    \r\n                            }}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div style={{margin: '10px', padding:'20px', backgroundColor: '#F3F6F6', borderRadius: '5px'}}>\r\n                        <div style={{display:'flex', alignItems: 'center', justifyContent: 'center', width:'100%'}}><strong style={{color: '#2B4748', fontSize: '14px', textAlign:'center'}}>Produtos com mais anunciados.</strong></div>\r\n                        <Bar\r\n                            height={250}\r\n                            width={250}\r\n                            data={dataValue}\r\n                            options={{\r\n                                title:{display:true,text:'',fontSize:14},\r\n                                legend:legendFormat,     \r\n                                tooltips: tooltipsNumber     \r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div style={{display:'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent:'space-between'}}>\r\n                    <div style={{margin: '10px', padding:'20px', backgroundColor: '#F3F6F6', borderRadius: '5px'}}>\r\n                    <div style={{display:'flex', alignItems: 'center', justifyContent: 'center', width:'100%'}}><strong style={{color: '#2B4748', fontSize: '14px', textAlign:'center'}}>Produtos com maior valor pago por Kg</strong></div>\r\n                        <Bar\r\n                            height={250}\r\n                            width={250}\r\n                            data={dataMaxValue}\r\n                            options={{\r\n                                title:{display:true,text:'',fontSize:14},\r\n                                legend:legendFormat,     \r\n                                tooltips: tooltipsAmount    \r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div style={{margin: '10px', padding:'20px', backgroundColor: '#F3F6F6', borderRadius: '5px'}}>\r\n                        <div style={{display:'flex', alignItems: 'center', justifyContent: 'center', width:'100%'}}><strong style={{color: '#2B4748', fontSize: '14px', textAlign:'center'}}>Produtos com mais anunciados.</strong></div>\r\n                        <Doughnut\r\n                            height={250}\r\n                            width={250}\r\n                            data={dataMaxSize}\r\n                            options={{\r\n                                title:{display:true,text:'',fontSize:14},\r\n                                legend:legendFormat,     \r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>     \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default Home;\r\n\r\n\r\n\r\n// console.log(resp)\r\n// resp.map(p => {\r\n//     products.push([\r\n//         p.product.product,\r\n//         parseFloat(p.averageValue.replace(',', '.'))\r\n//     ]);          \r\n// })\r\n\r\n// function googleChart() {\r\n//     return(\r\n//             <Chart\r\n//                             width='300px'\r\n//                             height='200px'\r\n//                             chartType=\"BarChart\"\r\n//                             data={data}\r\n//                             options={options, {\r\n//                                 // chartArea: { width: '100%' },\r\n//                                 // chartArea: { width: '50%', height: '70%' },\r\n//                                 title: 'Produtos com maior valor ofertado.',\r\n//                                 width: '200px',\r\n//                                 height: '200px',\r\n//                                 // responsive: true,\r\n//                                 bar: { groupWidth: '50%' },\r\n//                                 colors: ['#DDDF4B', '#2B4748'],\r\n//                                 // titlePosition: 'in',\r\n//                                 // axisTitlesPosition: 'in',\r\n//                                 // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \r\n//                                 legend: {position: 'bottom', textStyle: {color: '#2B4748', fontSize: 10}},\r\n//                                 hAxis: {format: 'currency'},\r\n//                                 // hAxis: {format: 'R$#,##',},\r\n//                                 // legend: {display: false}\r\n//                                 // legend: { width: '10%' },\r\n//                                 // isStacked: true,\r\n                                \r\n//                             }}\r\n//                             rootProps={{ 'data-testid': '3' }}\r\n//                         />\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}