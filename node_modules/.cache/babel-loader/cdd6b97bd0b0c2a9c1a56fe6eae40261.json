{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\src\\\\components\\\\Paginator\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport './paginator.css';\n\nfunction Paginator(props) {\n  var _this = this;\n\n  var _useState = useState(props.page),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(props.totalPages),\n      _useState4 = _slicedToArray(_useState3, 1),\n      totalPages = _useState4[0];\n\n  var _useState5 = useState(props.lengthPages),\n      _useState6 = _slicedToArray(_useState5, 1),\n      lengthPages = _useState6[0]; // const [pages, setPages] = useState([])\n\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pagesSegment = _useState8[0],\n      setPagesSegment = _useState8[1];\n\n  useEffect(function () {\n    loadPages(props.page, props.totalPages);\n  }, []);\n\n  function loadPages(_x, _x2) {\n    return _loadPages.apply(this, arguments);\n  }\n\n  function _loadPages() {\n    _loadPages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page, totalPages) {\n      var pages, segment, pg, length, i;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              debugger;\n              pages = [];\n              segment = [];\n              pg = page + 1;\n              length = lengthPages - 2;\n\n              for (i = 1; i < totalPages + 1; i++) {\n                pages.push(i);\n              }\n\n              segment = pages.slice(pg - length >= 0 ? pg - length : 0, pg + length <= pages.length ? pg + length : pages.length); // setPages(pages);     \n\n              setPagesSegment(segment);\n              console.log(segment);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadPages.apply(this, arguments);\n  }\n\n  function changePage(page) {\n    debugger;\n    var segment = [];\n    var pages = [];\n\n    for (var i = 1; i < props.totalPages + 1; i++) {\n      pages.push(i);\n    }\n\n    var quantExibPages = lengthPages - 1;\n    var init = page - (quantExibPages - 1) >= 0 ? page - (quantExibPages - 1) : 0;\n    var limit = init + quantExibPages < pages.length ? init + quantExibPages : pages.length;\n    console.log('pages.length: ' + pages.length);\n    console.log('Quantidade de pÃ¡ginas: ' + quantExibPages);\n    console.log(page);\n    page = page - 1;\n    page = page > totalPages ? totalPages - 1 : page;\n    page = page <= 0 ? 0 : page;\n    segment = pages.slice(init, limit);\n\n    if (limit === pages.length && limit - quantExibPages >= 0) {\n      segment = pages.slice(limit - quantExibPages, limit);\n    }\n\n    setPage(page);\n    setPagesSegment(segment);\n    props.callbackParent(page);\n  }\n\n  function leftPage(page) {\n    console.log(page);\n\n    if (page - 1 >= 0) {\n      var nextPage = page;\n      changePage(nextPage);\n    }\n  }\n\n  function rightPage(page) {\n    console.log(page);\n    console.log(totalPages);\n    debugger;\n    var pages = [];\n\n    for (var i = 1; i < props.totalPages + 1; i++) {\n      pages.push(i);\n    }\n\n    if (page + 2 > 0 && page + 2 < pages.length + 1) {\n      var nextPage = page + 2;\n      changePage(nextPage);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"paginator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"div-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \" \", page <= 0 ? /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/imgs/seta-left-opac.svg'),\n    alt: \"seta-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/imgs/seta-left.svg'),\n    alt: \"seta-left\",\n    onClick: function onClick() {\n      return leftPage(page);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"numbersPages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, pagesSegment.map(function (p) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: p,\n      id: \"numPage\",\n      onClick: function onClick() {\n        return changePage(p);\n      },\n      style: {\n        backgroundColor: p === page + 1 ? '#DDD' : 'transparent'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 24\n      }\n    }, p);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"div-arrow-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, page + 1 >= props.totalPages ? /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/imgs/seta-right-opac.svg'),\n    alt: \"seta-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/imgs/seta-right.svg'),\n    alt: \"seta-right\",\n    onClick: function onClick() {\n      return rightPage(page);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default Paginator;","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/components/Paginator/index.js"],"names":["React","useState","useEffect","Paginator","props","page","setPage","totalPages","lengthPages","pagesSegment","setPagesSegment","loadPages","pages","segment","pg","length","i","push","slice","console","log","changePage","quantExibPages","init","limit","callbackParent","leftPage","nextPage","rightPage","require","map","p","backgroundColor"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAO,iBAAP;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAAA,kBAEGH,QAAQ,CAACG,KAAK,CAACC,IAAP,CAFX;AAAA;AAAA,MAEdA,IAFc;AAAA,MAERC,OAFQ;;AAAA,mBAGAL,QAAQ,CAACG,KAAK,CAACG,UAAP,CAHR;AAAA;AAAA,MAGdA,UAHc;;AAAA,mBAICN,QAAQ,CAACG,KAAK,CAACI,WAAP,CAJT;AAAA;AAAA,MAIdA,WAJc,kBAKrB;;;AALqB,mBAMmBP,QAAQ,CAAC,EAAD,CAN3B;AAAA;AAAA,MAMdQ,YANc;AAAA,MAMAC,eANA;;AASvBR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,SAAS,CAACP,KAAK,CAACC,IAAP,EAAaD,KAAK,CAACG,UAAnB,CAAT;AACD,GAFQ,EAEP,EAFO,CAAT;;AATuB,WAcNI,SAdM;AAAA;AAAA;;AAAA;AAAA,0EAcrB,iBAAyBN,IAAzB,EAA+BE,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACIK,cAAAA,KAFR,GAEgB,EAFhB;AAGQC,cAAAA,OAHR,GAGkB,EAHlB;AAIQC,cAAAA,EAJR,GAIaT,IAAI,GAAG,CAJpB;AAKQU,cAAAA,MALR,GAKiBP,WAAW,GAAG,CAL/B;;AAMI,mBAAQQ,CAAR,GAAY,CAAZ,EAAeA,CAAC,GAAGT,UAAU,GAAG,CAAhC,EAAmCS,CAAC,EAApC,EAAwC;AACpCJ,gBAAAA,KAAK,CAACK,IAAN,CAAWD,CAAX;AACH;;AACDH,cAAAA,OAAO,GAAGD,KAAK,CAACM,KAAN,CAAYJ,EAAE,GAACC,MAAH,IAAa,CAAb,GAAiBD,EAAE,GAACC,MAApB,GAA6B,CAAzC,EAA4CD,EAAE,GAACC,MAAH,IAAaH,KAAK,CAACG,MAAnB,GAA4BD,EAAE,GAACC,MAA/B,GAAwCH,KAAK,CAACG,MAA1F,CAAV,CATJ,CAUI;;AACAL,cAAAA,eAAe,CAACG,OAAD,CAAf;AACAM,cAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;;AAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdqB;AAAA;AAAA;;AA6BrB,WAASQ,UAAT,CAAoBhB,IAApB,EAAyB;AACrB;AACA,QAAIQ,OAAO,GAAG,EAAd;AACA,QAAID,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGZ,KAAK,CAACG,UAAN,GAAmB,CAAtC,EAAyCS,CAAC,EAA1C,EAA8C;AAC1CJ,MAAAA,KAAK,CAACK,IAAN,CAAWD,CAAX;AACH;;AACD,QAAIM,cAAc,GAAGd,WAAW,GAAG,CAAnC;AACA,QAAIe,IAAI,GAAIlB,IAAI,IAAIiB,cAAc,GAAC,CAAnB,CAAJ,IAA6B,CAA9B,GAAmCjB,IAAI,IAAIiB,cAAc,GAAC,CAAnB,CAAvC,GAA+D,CAA1E;AACA,QAAIE,KAAK,GAAID,IAAI,GAAGD,cAAP,GAAwBV,KAAK,CAACG,MAA/B,GAAyCQ,IAAI,GAAGD,cAAhD,GAAiEV,KAAK,CAACG,MAAnF;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBR,KAAK,CAACG,MAArC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BE,cAAxC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;AACAA,IAAAA,IAAI,GAAIA,IAAI,GAAGE,UAAR,GAAsBA,UAAU,GAAC,CAAjC,GAAqCF,IAA5C;AACAA,IAAAA,IAAI,GAAIA,IAAI,IAAI,CAAT,GAAc,CAAd,GAAkBA,IAAzB;AACAQ,IAAAA,OAAO,GAAGD,KAAK,CAACM,KAAN,CAAYK,IAAZ,EAAkBC,KAAlB,CAAV;;AACA,QAAGA,KAAK,KAAKZ,KAAK,CAACG,MAAhB,IAA2BS,KAAK,GAAGF,cAAT,IAA4B,CAAzD,EAA4D;AACxDT,MAAAA,OAAO,GAAGD,KAAK,CAACM,KAAN,CAAYM,KAAK,GAACF,cAAlB,EAAkCE,KAAlC,CAAV;AACH;;AACDlB,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,IAAAA,eAAe,CAACG,OAAD,CAAf;AACAT,IAAAA,KAAK,CAACqB,cAAN,CAAqBpB,IAArB;AACH;;AAED,WAASqB,QAAT,CAAkBrB,IAAlB,EAAwB;AACpBc,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;;AACA,QAAGA,IAAI,GAAG,CAAP,IAAY,CAAf,EAAkB;AACd,UAAIsB,QAAQ,GAAGtB,IAAf;AACAgB,MAAAA,UAAU,CAACM,QAAD,CAAV;AACH;AACJ;;AAED,WAASC,SAAT,CAAmBvB,IAAnB,EAAyB;AACrBc,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;AACA;AACA,QAAIK,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGZ,KAAK,CAACG,UAAN,GAAmB,CAAtC,EAAyCS,CAAC,EAA1C,EAA8C;AAC1CJ,MAAAA,KAAK,CAACK,IAAN,CAAWD,CAAX;AACH;;AACD,QAAGX,IAAI,GAAG,CAAP,GAAW,CAAX,IAAgBA,IAAI,GAAG,CAAP,GAAWO,KAAK,CAACG,MAAN,GAAa,CAA3C,EAA8C;AAC1C,UAAIY,QAAQ,GAAGtB,IAAI,GAAG,CAAtB;AACAgB,MAAAA,UAAU,CAACM,QAAD,CAAV;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA4BtB,IAAI,IAAI,CAAT,gBACvB;AAAK,IAAA,GAAG,EAAEwB,OAAO,CAAC,sCAAD,CAAjB;AAA2D,IAAA,GAAG,EAAC,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADuB,gBAEvB;AAAK,IAAA,GAAG,EAAEA,OAAO,CAAC,iCAAD,CAAjB;AAAsD,IAAA,GAAG,EAAC,WAA1D;AACY,IAAA,OAAO,EAAE;AAAA,aAAMH,QAAQ,CAACrB,IAAD,CAAd;AAAA,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADA,eAMI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBI,YAAY,CAACqB,GAAb,CAAiB,UAACC,CAAD,EAAO;AAC5C,wBAAO;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,EAAE,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMV,UAAU,CAACU,CAAD,CAAhB;AAAA,OAAnC;AACH,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAGD,CAAC,KAAK1B,IAAI,GAAG,CAAd,GACzB,MADyB,GACjB;AADD,OADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEsB0B,CAFtB,CAAP;AAGY,GAJQ,CAAxB,CANJ,eAYA;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B1B,IAAI,GAAG,CAAP,IAAYD,KAAK,CAACG,UAAnB,gBACvB;AAAK,IAAA,GAAG,EAAEsB,OAAO,CAAC,uCAAD,CAAjB;AAA4D,IAAA,GAAG,EAAC,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADuB,gBAEvB;AAAK,IAAA,GAAG,EAAEA,OAAO,CAAC,kCAAD,CAAjB;AAAuD,IAAA,GAAG,EAAC,YAA3D;AACY,IAAA,OAAO,EAAE;AAAA,aAAMD,SAAS,CAACvB,IAAD,CAAf;AAAA,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAZA,CADJ;AAsBH;;AACD,eAAeF,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport './paginator.css';\r\n\r\n\r\nfunction Paginator(props){\r\n\r\n    const [page, setPage] = useState(props.page)\r\n    const [totalPages] = useState(props.totalPages)\r\n    const [lengthPages] = useState(props.lengthPages)\r\n    // const [pages, setPages] = useState([])\r\n    const [pagesSegment, setPagesSegment] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    loadPages(props.page, props.totalPages);\r\n  },[])\r\n\r\n\r\n    async function loadPages(page, totalPages) {\r\n        debugger;\r\n        let pages = [];\r\n        let segment = [];\r\n        let pg = page + 1;\r\n        let length = lengthPages - 2;\r\n        for(let i = 1; i < totalPages + 1; i++) {\r\n            pages.push(i);\r\n        }\r\n        segment = pages.slice(pg-length >= 0 ? pg-length : 0, pg+length <= pages.length ? pg+length : pages.length);    \r\n        // setPages(pages);     \r\n        setPagesSegment(segment);\r\n        console.log(segment);\r\n    }\r\n\r\n    function changePage(page){\r\n        debugger;\r\n        let segment = [];\r\n        let pages = [];\r\n        for(let i = 1; i < props.totalPages + 1; i++) {\r\n            pages.push(i);\r\n        }\r\n        let quantExibPages = lengthPages - 1;\r\n        let init = (page - (quantExibPages-1) >= 0) ? page - (quantExibPages-1) : 0;\r\n        let limit = (init + quantExibPages < pages.length) ? init + quantExibPages : pages.length;\r\n        console.log('pages.length: ' + pages.length)\r\n        console.log('Quantidade de pÃ¡ginas: ' + quantExibPages)\r\n        console.log(page)\r\n        page = page - 1;\r\n        page = (page > totalPages) ? totalPages-1 : page;\r\n        page = (page <= 0) ? 0 : page;\r\n        segment = pages.slice(init, limit);\r\n        if(limit === pages.length && (limit - quantExibPages) >= 0) {\r\n            segment = pages.slice(limit-quantExibPages, limit);\r\n        }\r\n        setPage(page);     \r\n        setPagesSegment(segment);\r\n        props.callbackParent(page)\r\n    }\r\n\r\n    function leftPage(page) {\r\n        console.log(page);\r\n        if(page - 1 >= 0) {\r\n            let nextPage = page;\r\n            changePage(nextPage)\r\n        }\r\n    }\r\n\r\n    function rightPage(page) {\r\n        console.log(page);\r\n        console.log(totalPages);\r\n        debugger;\r\n        let pages = [];\r\n        for(let i = 1; i < props.totalPages + 1; i++) {\r\n            pages.push(i);\r\n        }\r\n        if(page + 2 > 0 && page + 2 < pages.length+1) {\r\n            let nextPage = page + 2;\r\n            changePage(nextPage)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id='paginator'>\r\n        <div id='div-arrow-left'> {(page <= 0) ?\r\n            <img src={require('../../assets/imgs/seta-left-opac.svg')} alt='seta-left' /> :\r\n            <img src={require('../../assets/imgs/seta-left.svg')} alt='seta-left'\r\n                        onClick={() => leftPage(page)}/>}\r\n        </div>\r\n            <div id='numbersPages'>{pagesSegment.map((p) => {\r\n                return(<div key={p} id='numPage' onClick={() => changePage(p)}\r\n                    style={{backgroundColor: (p === page + 1) ?\r\n                    '#DDD': 'transparent'}}>{p}\r\n                    </div>)})}\r\n            </div>      \r\n        <div id='div-arrow-right'>{(page + 1 >= props.totalPages) ?\r\n            <img src={require('../../assets/imgs/seta-right-opac.svg')} alt='seta-right' /> :\r\n            <img src={require('../../assets/imgs/seta-right.svg')} alt='seta-right'\r\n                        onClick={() => rightPage(page)}/>}\r\n        </div>\r\n    </div>\r\n    )\r\n    \r\n   \r\n}\r\nexport default Paginator;\r\n"]},"metadata":{},"sourceType":"module"}