{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\src\\\\pages\\\\Admin\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './admin.css';\nimport { axiosService } from '../../service/axios';\nimport { existParam } from '../../utils/ValidInfo';\nimport MessageLine from '../../components/MessageLine';\n\nfunction Admin() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      stationNotFound = _useState2[0],\n      setStationNotFound = _useState2[1];\n\n  var _useState3 = useState({\n    idUser: '',\n    email: '',\n    token: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      id = _useState6[0],\n      setId = _useState6[1];\n\n  var _useEffect = useEffect([]),\n      _useEffect2 = _slicedToArray(_useEffect, 2),\n      stations = _useEffect2[0],\n      setStations = _useEffect2[1];\n\n  var _useEffect3 = useEffect({\n    phones: [],\n    emails: [],\n    webContacts: [],\n    products: []\n  }),\n      _useEffect4 = _slicedToArray(_useEffect3, 2),\n      station = _useEffect4[0],\n      setStation = _useEffect4[1];\n\n  var _useEffect5 = useEffect([]),\n      _useEffect6 = _slicedToArray(_useEffect5, 2),\n      stationsFormat = _useEffect6[0],\n      setStationsFormat = _useEffect6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      typeMessage = _useState10[0],\n      setTypeMessage = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      load = _useState12[0],\n      setLoad = _useState12[1];\n\n  useEffect(function () {\n    findUser();\n  }, []);\n\n  function findUser() {\n    var user = {\n      idUser: localStorage.getItem('idUser'),\n      email: localStorage.getItem('email'),\n      token: localStorage.getItem('token')\n    };\n    setUser({\n      user: user\n    });\n    findStationToUser(user);\n  }\n\n  function findStationToUser(_x) {\n    return _findStationToUser.apply(this, arguments);\n  }\n\n  function _findStationToUser() {\n    _findStationToUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              debugger;\n              console.log(user.email);\n              _context.next = 4;\n              return axiosService({\n                method: 'GET',\n                url: '/stations/find',\n                params: {\n                  email: user.email,\n                  page: 0,\n                  size: 1\n                }\n              }).then(function (response) {\n                console.log(response);\n                setStations(response.data.response);\n                var stationsFormat = []; // response.data.response.map(station => {\n                //     let products = loadProductsStation(station.idStation);\n                //     let phones = formatPhones(station);\n                //     let emails = formatEmails(station);\n                //     let webContacts = formatWebContacts(station);\n                //     let stationFormat = {station, products, phones, emails, webContacts}\n                //     stationsFormat.push(stationFormat);\n                // });\n\n                setStationNotFound(false);\n              }).catch(function (error) {\n                if (error.message.includes('404')) {\n                  setStationNotFound(true);\n                } // setMessage('Falha ao consultar informações do posto de coleta.');\n                // setTypeMessage('error')   \n                // setLoad(false)\n\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _findStationToUser.apply(this, arguments);\n  }\n\n  function messageRegister() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"stationNotFound\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"txtStationNotFound\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Ops... parece que voc\\xEA ainda n\\xE3o tem um posto de coleta cadastrado, deseja cadastrar agora?\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"btnsContainerNotFound\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/cadastrar\",\n      id: \"btnGenericYes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 62\n      }\n    }, \"Sim\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      id: \"btnGenericNot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 53\n      }\n    }, \"N\\xE3o\"))));\n  }\n\n  function loadProductsStation(_x2) {\n    return _loadProductsStation.apply(this, arguments);\n  }\n\n  function _loadProductsStation() {\n    _loadProductsStation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axiosService({\n                url: '/marketProduct/find',\n                method: 'GET',\n                params: {\n                  page: 0,\n                  size: 0,\n                  stationId: id\n                }\n              });\n\n            case 3:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response.data.response);\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n    return _loadProductsStation.apply(this, arguments);\n  }\n\n  function formatPhones(station) {\n    var phones = [];\n    existParam(station.phone) && phones.push(station.phone);\n    existParam(station.phoneAdd) && phones.push(station.phoneAdd);\n    existParam(station.cellPhone) && phones.push(station.cellPhone);\n    existParam(station.cellPhoneAdd) && phones.push(station.cellPhoneAdd);\n    return phones;\n  }\n\n  function formatEmails(station) {\n    var emails = [];\n    existParam(station.email) && emails.push(station.email);\n    existParam(station.emailAdd) && emails.push(station.emailAdd);\n    return emails;\n  }\n\n  function formatWebContacts(station) {\n    var webContacts = [];\n    existParam(station.site) && webContacts.push(station.site);\n    existParam(station.facebook) && webContacts.push(station.facebook);\n    existParam(station.otherUrl) && webContacts.push(station.otherUrl);\n    return webContacts;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"titlePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerResultFind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, stationNotFound === true && messageRegister())));\n}\n\nexport default Admin;","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/pages/Admin/index.js"],"names":["React","useEffect","useState","Link","axiosService","existParam","MessageLine","Admin","stationNotFound","setStationNotFound","idUser","email","token","user","setUser","id","setId","stations","setStations","phones","emails","webContacts","products","station","setStation","stationsFormat","setStationsFormat","message","setMessage","typeMessage","setTypeMessage","load","setLoad","findUser","localStorage","getItem","findStationToUser","console","log","method","url","params","page","size","then","response","data","catch","error","includes","messageRegister","loadProductsStation","stationId","formatPhones","phone","push","phoneAdd","cellPhone","cellPhoneAdd","formatEmails","emailAdd","formatWebContacts","site","facebook","otherUrl"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './admin.css'\r\nimport { axiosService } from '../../service/axios';\r\nimport { existParam } from '../../utils/ValidInfo';\r\nimport MessageLine from '../../components/MessageLine';\r\n\r\nfunction Admin() {\r\n\r\n    const [stationNotFound, setStationNotFound] = useState();\r\n    const [user, setUser] = useState({idUser:'', email:'', token:''});\r\n    const [id, setId] = useState();\r\n    const [stations, setStations] = useEffect([]);\r\n    const [station, setStation] = useEffect({phones:[], emails:[], webContacts:[], products:[]});\r\n    const [stationsFormat, setStationsFormat] = useEffect([]);\r\n    const [message, setMessage] = useState();\r\n    const [typeMessage, setTypeMessage] = useState();\r\n    const [load, setLoad] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        findUser();\r\n    }, [])\r\n\r\n    function findUser() {\r\n        let user = {\r\n            idUser: localStorage.getItem('idUser'),\r\n            email: localStorage.getItem('email'),\r\n            token: localStorage.getItem('token')\r\n        }\r\n        setUser({user});\r\n        findStationToUser(user);\r\n    }\r\n\r\n    async function findStationToUser(user) {\r\n        debugger;\r\n        console.log(user.email)\r\n        await axiosService({\r\n            method: 'GET',\r\n            url:'/stations/find',\r\n            params:{email: user.email, page: 0, size:1}\r\n        }).then(response => {\r\n            console.log(response)\r\n            setStations(response.data.response)\r\n            let stationsFormat = [];\r\n            // response.data.response.map(station => {\r\n            //     let products = loadProductsStation(station.idStation);\r\n            //     let phones = formatPhones(station);\r\n            //     let emails = formatEmails(station);\r\n            //     let webContacts = formatWebContacts(station);\r\n            //     let stationFormat = {station, products, phones, emails, webContacts}\r\n            //     stationsFormat.push(stationFormat);\r\n            // });\r\n            setStationNotFound(false);\r\n        }).catch(error => {\r\n            if(error.message.includes('404')){\r\n                setStationNotFound(true);\r\n            }\r\n            // setMessage('Falha ao consultar informações do posto de coleta.');\r\n            // setTypeMessage('error')   \r\n            // setLoad(false)\r\n        })\r\n    }\r\n\r\n    function messageRegister() {\r\n        return(\r\n            <div id='stationNotFound'>\r\n                <div id='txtStationNotFound'>Ops... parece que você ainda não\r\n                tem um posto de coleta cadastrado, deseja cadastrar agora?</div>\r\n                <div id='btnsContainerNotFound'>\r\n                    <Link to='/cadastrar' id='btnGenericYes'><div>Sim</div></Link>\r\n                    <Link to='/' id='btnGenericNot'><div>Não</div></Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async function loadProductsStation(id) {\r\n        try {\r\n            const response = await axiosService({\r\n                url: '/marketProduct/find',\r\n                method: 'GET',\r\n                params: {\r\n                    page: 0,\r\n                    size: 0,\r\n                    stationId: id\r\n                }\r\n            })\r\n            return response.data.response;\r\n        } catch(error) {\r\n           \r\n        }\r\n    }\r\n\r\n    function formatPhones(station) {\r\n        let phones = [];\r\n        existParam(station.phone) && phones.push(station.phone);  \r\n        existParam(station.phoneAdd) && phones.push(station.phoneAdd);\r\n        existParam(station.cellPhone) && phones.push(station.cellPhone);\r\n        existParam(station.cellPhoneAdd) && phones.push(station.cellPhoneAdd);\r\n        return phones;\r\n    }\r\n\r\n    function formatEmails(station) {\r\n        let emails = [];        \r\n        existParam(station.email) && emails.push(station.email);   \r\n        existParam(station.emailAdd) && emails.push(station.emailAdd);\r\n        return emails;\r\n    }\r\n\r\n    function formatWebContacts(station) {\r\n        let webContacts = [];   \r\n        existParam(station.site) && webContacts.push(station.site);    \r\n        existParam(station.facebook) && webContacts.push(station.facebook);\r\n        existParam(station.otherUrl) && webContacts.push(station.otherUrl);\r\n        return webContacts;\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div id='containerPage'>\r\n            <div id='titlePage'></div>\r\n            <div id='containerResultFind'>\r\n                <div>{stationNotFound === true && messageRegister()}</div>\r\n                \r\n             </div>   \r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}