{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\src\\\\components\\\\Paginator\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction Paginator(props) {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      pageThis = _useState2[0],\n      setPageThis = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pages = _useState4[0],\n      setPages = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pagesSegment = _useState6[0],\n      setPagesSegment = _useState6[1];\n\n  useEffect(function () {\n    loadPages(props.page, props.totalPages);\n  }, []);\n\n  function loadPages(page, totalPages) {\n    debugger;\n    var pages = [];\n    var segment = [];\n    var pg = page + 1;\n\n    for (var i = 1; i < totalPages + 1; i++) {\n      pages.push(i);\n    }\n\n    segment = pages.slice(pg - 2 >= 0 ? pg - 2 : 0, pg + 2 <= pages.length ? pg + 2 : pages.length);\n    setPages(pages);\n    setPagesSegment(segment);\n    console.log(segment);\n  }\n\n  function changePage(page, totalPages) {\n    debugger;\n    var segment = [];\n    var pages = [];\n\n    for (var i = 1; i < totalPages + 1; i++) {\n      pages.push(i);\n    }\n\n    var quantExibPages = 3;\n    var init = page - (quantExibPages - 1) >= 0 ? page - (quantExibPages - 1) : 0;\n    var limit = init + quantExibPages < pages.length ? init + quantExibPages : pages.length;\n    console.log('pages.length: ' + pages.length);\n    console.log(page);\n    page = page - 1;\n    page = page > totalPages ? totalPages - 1 : page;\n    page = page <= 0 ? 0 : page;\n    segment = pages.slice(init, limit);\n\n    if (limit === pages.length && limit - quantExibPages >= 0) {\n      segment = pages.slice(limit - quantExibPages, limit);\n    }\n\n    setPageThis(page);\n    setPagesSegment(segment);\n  }\n\n  function leftPage(page, totalPages) {\n    console.log(page);\n\n    if (page - 1 >= 0) {\n      var nextPage = page;\n      changePage(nextPage);\n    }\n  }\n\n  function rightPage(page, totalPages) {\n    console.log(page);\n    console.log(totalPages);\n    debugger;\n    var pages = [];\n\n    for (var i = 1; i < totalPages + 1; i++) {\n      pages.push(i);\n    }\n\n    if (page + 2 > 0 || page + 2 < pages.length) {\n      var nextPage = page + 2;\n      changePage(nextPage);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"paginator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"div-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \" \", props.page <= 0 ? /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/imgs/seta-left-opac.svg'),\n    alt: \"seta-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/imgs/seta-left.svg'),\n    alt: \"seta-left\",\n    onClick: function onClick() {\n      return leftPage(props.page, props.totalPages);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"numbersPages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, pagesSegment.map(function (p) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: p,\n      id: \"numPage\",\n      onClick: function onClick() {\n        return changePage(p, props.totalPages);\n      },\n      style: {\n        backgroundColor: p === props.page + 1 ? '#DDD' : 'transparent'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 24\n      }\n    }, p);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"div-arrow-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, props.page + 1 >= props.totalPages ? /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/imgs/seta-right-opac.svg'),\n    alt: \"seta-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/imgs/seta-right.svg'),\n    alt: \"seta-right\",\n    onClick: function onClick() {\n      return rightPage(props.page, props.totalPages);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default Paginator;","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/components/Paginator/index.js"],"names":["React","useState","useEffect","Paginator","props","pageThis","setPageThis","pages","setPages","pagesSegment","setPagesSegment","loadPages","page","totalPages","segment","pg","i","push","slice","length","console","log","changePage","quantExibPages","init","limit","leftPage","nextPage","rightPage","require","map","p","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\n\r\nfunction Paginator(props){\r\n\r\n    const [pageThis, setPageThis] = useState(0)\r\n    const [pages, setPages] = useState([])\r\n    const [pagesSegment, setPagesSegment] = useState([])\r\n\r\n    useEffect(() => {\r\n        loadPages(props.page, props.totalPages);\r\n    },[])\r\n\r\n    function loadPages(page, totalPages) {\r\n        debugger;\r\n        let pages = [];\r\n        let segment = [];\r\n        let pg = page + 1;\r\n        for(let i = 1; i < totalPages + 1; i++) {\r\n            pages.push(i);\r\n        }\r\n        segment = pages.slice(pg-2 >= 0 ? pg-2 : 0, pg+2 <= pages.length ? pg+2 : pages.length);    \r\n        setPages(pages);     \r\n        setPagesSegment(segment);\r\n        console.log(segment);\r\n    }\r\n\r\n\r\n    function changePage(page, totalPages){\r\n        debugger;\r\n        let segment = [];\r\n        let pages = [];\r\n        for(let i = 1; i < totalPages + 1; i++) {\r\n            pages.push(i);\r\n        }\r\n        let quantExibPages = 3;\r\n        let init = (page - (quantExibPages-1) >= 0) ? page - (quantExibPages-1) : 0;\r\n        let limit = (init + quantExibPages < pages.length) ? init + quantExibPages : pages.length;\r\n        console.log('pages.length: ' + pages.length)\r\n        console.log(page)\r\n        page = page - 1;\r\n        page = (page > totalPages) ? totalPages-1 : page;\r\n        page = (page <= 0) ? 0 : page;\r\n        segment = pages.slice(init, limit);\r\n        if(limit === pages.length && (limit - quantExibPages) >= 0) {\r\n            segment = pages.slice(limit-quantExibPages, limit);\r\n        }\r\n        setPageThis(page);     \r\n        setPagesSegment(segment);\r\n    }\r\n\r\n    function leftPage(page, totalPages) {\r\n        console.log(page);\r\n        if(page - 1 >= 0) {\r\n            let nextPage = page;\r\n            changePage(nextPage)\r\n        }\r\n    }\r\n\r\n    function rightPage(page, totalPages) {\r\n        console.log(page);\r\n        console.log(totalPages);\r\n        debugger;\r\n        let pages = [];\r\n        for(let i = 1; i < totalPages + 1; i++) {\r\n            pages.push(i);\r\n        }\r\n        if(page + 2 > 0 || page + 2 < pages.length) {\r\n            let nextPage = page + 2;\r\n            changePage(nextPage)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id='paginator'>\r\n        <div id='div-arrow-left'> {(props.page <= 0) ?\r\n            <img src={require('../../assets/imgs/seta-left-opac.svg')} alt='seta-left' /> :\r\n            <img src={require('../../assets/imgs/seta-left.svg')} alt='seta-left'\r\n                        onClick={() => leftPage(props.page, props.totalPages)}/>}\r\n        </div>\r\n            <div id='numbersPages'>{pagesSegment.map((p) => {\r\n                return(<div key={p} id='numPage' onClick={() => changePage(p, props.totalPages)}\r\n                    style={{backgroundColor: (p === props.page + 1) ?\r\n                    '#DDD': 'transparent'}}>{p}\r\n                    </div>)})}\r\n            </div>      \r\n        <div id='div-arrow-right'>{(props.page + 1 >= props.totalPages) ?\r\n            <img src={require('../../assets/imgs/seta-right-opac.svg')} alt='seta-right' /> :\r\n            <img src={require('../../assets/imgs/seta-right.svg')} alt='seta-right'\r\n                        onClick={() => rightPage(props.page, props.totalPages)}/>}\r\n        </div>\r\n    </div>\r\n    )\r\n    \r\n   \r\n}\r\nexport default Paginator;\r\n"]},"metadata":{},"sourceType":"module"}