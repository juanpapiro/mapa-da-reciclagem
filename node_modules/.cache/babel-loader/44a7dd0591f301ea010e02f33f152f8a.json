{"ast":null,"code":"export var notNull = function notNull(form) {\n  var errors = [];\n\n  if (form.nmFantazy === '' || form.nmFantazy === null) {\n    errors.push(['nmFantazy', 'Nome fantazia deve ser preenchido.']);\n  }\n\n  if (form.doc === '' || form.doc === null) {\n    errors.push(['doc', 'Documento deve ser preenchido.']);\n  }\n\n  if (form.zip === '' || form.zip === null) {\n    errors.push(['zip', 'Cep deve ser preenchido.']);\n  }\n\n  if (form.street === '' || form.street == null) {\n    errors.push(['street', 'Nome da rua deve ser preenchido.']);\n  }\n\n  if (form.number === '' || form.number == null) {\n    errors.push(['number', 'Número deve ser preenchido.']);\n  }\n\n  if (form.neighborhood === '' || form.neighborhood == null) {\n    errors.push(['neighborhood', 'Bairro deve ser preenchido.']);\n  }\n\n  if (form.city === '' || form.city === null) {\n    errors.push(['city', 'Cidade deve ser preenchido.']);\n  }\n\n  if (form.state === '' || form.state === null) {\n    errors.push(['state', 'Estado deve ser preenchido.']);\n  }\n\n  return errors;\n};\nexport var validCpf = function validCpf(cpf) {\n  debugger;\n  var verify = ['Cpf inválido!'];\n  cpf = cpf.replace(/\\D/g, '');\n  var arrayVerifyDig1 = [10, 9, 8, 7, 6, 5, 4, 3, 2];\n  var arrayVerifyDig2 = [11].concat(arrayVerifyDig1);\n  var arrayMultiply = [];\n  var arrayCpf = parseInt(Array.from(cpf));\n  arrayVerifyDig1.forEach(function (num, i) {\n    return arrayMultiply.push(num * arrayCpf[i]);\n  });\n  var full1 = arrayMultiply.reduce(function (sum, num) {\n    return sum + num;\n  }, 0);\n  var mod1 = full1 * 10 % 11;\n  var number = arrayCpf[9];\n  if ((mod1 === 10 || mod1 === 11) && arrayCpf[9] !== 0) return verify;\n  arrayMultiply = [];\n  arrayVerifyDig2.forEach(function (num, i) {\n    return arrayMultiply.push(num * arrayCpf[i]);\n  });\n  var full2 = arrayMultiply.reduce(function (sum, num) {\n    return sum + num;\n  }, 0);\n  var mod2 = full2 * 10 % 11;\n  if ((mod1 === 10 || mod1 === 11) && arrayCpf[9] === 0) return [];\n  verify = mod2 === arrayCpf[10] ? [] : verify;\n  return verify;\n};","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/utils/ValidForm.js"],"names":["notNull","form","errors","nmFantazy","push","doc","zip","street","number","neighborhood","city","state","validCpf","cpf","verify","replace","arrayVerifyDig1","arrayVerifyDig2","arrayMultiply","arrayCpf","parseInt","Array","from","forEach","num","i","full1","reduce","sum","mod1","full2","mod2"],"mappings":"AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AAC3B,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAGD,IAAI,CAACE,SAAL,KAAmB,EAAnB,IAAyBF,IAAI,CAACE,SAAL,KAAmB,IAA/C,EAAoD;AAChDD,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,WAAD,EAAa,oCAAb,CAAZ;AACH;;AACD,MAAGH,IAAI,CAACI,GAAL,KAAa,EAAb,IAAmBJ,IAAI,CAACI,GAAL,KAAa,IAAnC,EAAwC;AACpCH,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,KAAD,EAAO,gCAAP,CAAZ;AACH;;AACD,MAAGH,IAAI,CAACK,GAAL,KAAa,EAAb,IAAmBL,IAAI,CAACK,GAAL,KAAa,IAAnC,EAAwC;AACpCJ,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,KAAD,EAAO,0BAAP,CAAZ;AACH;;AACD,MAAGH,IAAI,CAACM,MAAL,KAAgB,EAAhB,IAAsBN,IAAI,CAACM,MAAL,IAAe,IAAxC,EAA6C;AACzCL,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,QAAD,EAAU,kCAAV,CAAZ;AACH;;AACD,MAAGH,IAAI,CAACO,MAAL,KAAgB,EAAhB,IAAsBP,IAAI,CAACO,MAAL,IAAe,IAAxC,EAA6C;AACzCN,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,QAAD,EAAU,6BAAV,CAAZ;AACH;;AACD,MAAGH,IAAI,CAACQ,YAAL,KAAsB,EAAtB,IAA4BR,IAAI,CAACQ,YAAL,IAAqB,IAApD,EAAyD;AACrDP,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,cAAD,EAAgB,6BAAhB,CAAZ;AACH;;AACD,MAAGH,IAAI,CAACS,IAAL,KAAc,EAAd,IAAoBT,IAAI,CAACS,IAAL,KAAc,IAArC,EAA0C;AACtCR,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,MAAD,EAAQ,6BAAR,CAAZ;AACH;;AACD,MAAGH,IAAI,CAACU,KAAL,KAAe,EAAf,IAAqBV,IAAI,CAACU,KAAL,KAAe,IAAvC,EAA4C;AACxCT,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,OAAD,EAAS,6BAAT,CAAZ;AACH;;AACD,SAAOF,MAAP;AACH,CA3BM;AA6BP,OAAO,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AAE7B;AACA,MAAIC,MAAM,GAAG,CAAC,eAAD,CAAb;AACAD,EAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAN;AACA,MAAIC,eAAe,GAAG,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAtB;AACA,MAAIC,eAAe,IAAI,EAAJ,SAAWD,eAAX,CAAnB;AACA,MAAIE,aAAa,GAAG,EAApB;AACA,MAAIC,QAAQ,GAAGC,QAAQ,CAACC,KAAK,CAACC,IAAN,CAAWT,GAAX,CAAD,CAAvB;AACAG,EAAAA,eAAe,CAACO,OAAhB,CAAwB,UAACC,GAAD,EAAMC,CAAN;AAAA,WAAYP,aAAa,CAACd,IAAd,CAAmBoB,GAAG,GAAGL,QAAQ,CAACM,CAAD,CAAjC,CAAZ;AAAA,GAAxB;AACA,MAAIC,KAAK,GAAGR,aAAa,CAACS,MAAd,CAAqB,UAACC,GAAD,EAAMJ,GAAN;AAAA,WAAcI,GAAG,GAAGJ,GAApB;AAAA,GAArB,EAA8C,CAA9C,CAAZ;AACA,MAAIK,IAAI,GAAIH,KAAK,GAAG,EAAT,GAAe,EAA1B;AACA,MAAIlB,MAAM,GAAGW,QAAQ,CAAC,CAAD,CAArB;AACA,MAAI,CAACU,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAK,EAAzB,KAAgCV,QAAQ,CAAC,CAAD,CAAR,KAAgB,CAApD,EAAuD,OAAOL,MAAP;AACvDI,EAAAA,aAAa,GAAG,EAAhB;AACAD,EAAAA,eAAe,CAACM,OAAhB,CAAwB,UAACC,GAAD,EAAMC,CAAN;AAAA,WAAYP,aAAa,CAACd,IAAd,CAAmBoB,GAAG,GAAGL,QAAQ,CAACM,CAAD,CAAjC,CAAZ;AAAA,GAAxB;AACA,MAAIK,KAAK,GAAGZ,aAAa,CAACS,MAAd,CAAqB,UAACC,GAAD,EAAMJ,GAAN;AAAA,WAAcI,GAAG,GAAGJ,GAApB;AAAA,GAArB,EAA8C,CAA9C,CAAZ;AACA,MAAIO,IAAI,GAAID,KAAK,GAAG,EAAT,GAAe,EAA1B;AACA,MAAI,CAACD,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAK,EAAzB,KAAgCV,QAAQ,CAAC,CAAD,CAAR,KAAgB,CAApD,EAAuD,OAAO,EAAP;AACvDL,EAAAA,MAAM,GAAIiB,IAAI,KAAKZ,QAAQ,CAAC,EAAD,CAAlB,GAA0B,EAA1B,GAA+BL,MAAxC;AACA,SAAOA,MAAP;AAIH,CAxBM","sourcesContent":["export const notNull = form => {\r\n    let errors = [];\r\n    if(form.nmFantazy === '' || form.nmFantazy === null){\r\n        errors.push(['nmFantazy','Nome fantazia deve ser preenchido.']);     \r\n    }\r\n    if(form.doc === '' || form.doc === null){\r\n        errors.push(['doc','Documento deve ser preenchido.']);     \r\n    }\r\n    if(form.zip === '' || form.zip === null){\r\n        errors.push(['zip','Cep deve ser preenchido.']);     \r\n    }\r\n    if(form.street === '' || form.street == null){\r\n        errors.push(['street','Nome da rua deve ser preenchido.']);     \r\n    }\r\n    if(form.number === '' || form.number == null){\r\n        errors.push(['number','Número deve ser preenchido.']);     \r\n    }\r\n    if(form.neighborhood === '' || form.neighborhood == null){\r\n        errors.push(['neighborhood','Bairro deve ser preenchido.']);     \r\n    }\r\n    if(form.city === '' || form.city === null){\r\n        errors.push(['city','Cidade deve ser preenchido.']);     \r\n    }\r\n    if(form.state === '' || form.state === null){\r\n        errors.push(['state','Estado deve ser preenchido.']);     \r\n    }\r\n    return errors;\r\n}\r\n\r\nexport const validCpf = (cpf) => {\r\n\r\n    debugger;\r\n    let verify = ['Cpf inválido!'];\r\n    cpf = cpf.replace(/\\D/g, '');\r\n    let arrayVerifyDig1 = [10, 9, 8, 7, 6, 5, 4, 3, 2];\r\n    let arrayVerifyDig2 = [11, ...arrayVerifyDig1];\r\n    let arrayMultiply = [];\r\n    let arrayCpf = parseInt(Array.from(cpf));\r\n    arrayVerifyDig1.forEach((num, i) => arrayMultiply.push(num * arrayCpf[i]));\r\n    let full1 = arrayMultiply.reduce((sum, num) => sum + num, 0);\r\n    let mod1 = (full1 * 10) % 11;\r\n    let number = arrayCpf[9];\r\n    if ((mod1 === 10 || mod1 === 11) && arrayCpf[9] !== 0) return verify;\r\n    arrayMultiply = [];\r\n    arrayVerifyDig2.forEach((num, i) => arrayMultiply.push(num * arrayCpf[i]));\r\n    let full2 = arrayMultiply.reduce((sum, num) => sum + num, 0);\r\n    let mod2 = (full2 * 10) % 11;\r\n    if ((mod1 === 10 || mod1 === 11) && arrayCpf[9] === 0) return [];\r\n    verify = (mod2 === arrayCpf[10]) ? [] : verify;\r\n    return verify;\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}