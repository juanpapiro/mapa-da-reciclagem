{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport './home.css';\nimport { axiosService } from '../../service/axios';\n\nfunction Home() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      legendFormat = _useState2[0],\n      setLegendFormat = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scalesFormat = _useState4[0],\n      setScalesFormat = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tooltipsNumber = _useState6[0],\n      setTooltipsNumber = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tooltipsAmount = _useState8[0],\n      setTooltipsAmount = _useState8[1];\n\n  var _useState9 = useState({\n    labels: [],\n    datasets: [{}]\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dataValue = _useState10[0],\n      setDataValue = _useState10[1];\n\n  var _useState11 = useState({\n    labels: [],\n    datasets: [{}]\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataMaxValue = _useState12[0],\n      setDataMaxValue = _useState12[1];\n\n  var _useState13 = useState({\n    labels: [],\n    datasets: [{}]\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dataMaxSize = _useState14[0],\n      setDataMaxSize = _useState14[1];\n\n  var _useState15 = useState({\n    labels: [],\n    datasets: [{}]\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dataMaxUpdate = _useState16[0],\n      setDataMaxUpdate = _useState16[1];\n\n  var _useState17 = useState(['#80A51B', '#547F82', '#5B7813', '#00AB97', '#B9C400']),\n      _useState18 = _slicedToArray(_useState17, 1),\n      colors = _useState18[0];\n\n  var _useState19 = useState({\n    productValue: '',\n    productName: '',\n    stationName: '',\n    stationState: '',\n    stationCity: ''\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      productMaxValue = _useState20[0],\n      setProductMaxValue = _useState20[1];\n\n  useEffect(function () {\n    loadInfoProductMaxValueAndStation();\n    loadDashProductValue();\n    loadDashProductSize();\n    loadDashProductUpdate();\n    legendFormatter();\n    scalesFormatter();\n  }, []);\n\n  function loadDashProductValue() {\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  function _loadDashProductValue() {\n    _loadDashProductValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              axiosService({\n                method: 'GET',\n                url: '/recycling/mktProductValue',\n                params: {\n                  page: 0,\n                  size: 5\n                }\n              }).then(function (response) {\n                var resp = [];\n                var maxValues = [];\n                var minValues = [];\n                var averageValues = [];\n                var products = [];\n                console.log(response);\n                resp = response.data.listRecyclingProductsValue;\n                resp.forEach(function (p) {\n                  maxValues.push(parseFloat(p.maxValue.replace(',', '.')));\n                  minValues.push(parseFloat(p.minValue.replace(',', '.')));\n                  averageValues.push(parseFloat(p.averageValue.replace(',', '.')));\n                  products.push(p.product.product);\n                });\n                setDataMaxValue({\n                  labels: products,\n                  datasets: [{\n                    label: 'valor máximo/Kg',\n                    backgroundColor: colors,\n                    data: maxValues\n                  }]\n                });\n                setDataValue({\n                  labels: products,\n                  datasets: [{\n                    label: 'valor mínimo/Kg',\n                    backgroundColor: '#547F82',\n                    data: minValues\n                  }, {\n                    label: 'valor máximo/Kg',\n                    backgroundColor: '#B9C400',\n                    data: maxValues\n                  }, {\n                    label: 'valor médio/Kg',\n                    backgroundColor: '#00AB97',\n                    data: averageValues\n                  }]\n                });\n                formatToolTips('amount');\n              }).catch(function (error) {});\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  ;\n\n  function loadDashProductSize() {\n    return _loadDashProductSize.apply(this, arguments);\n  }\n\n  function _loadDashProductSize() {\n    _loadDashProductSize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              axiosService({\n                method: 'GET',\n                url: '/recycling/mktProductSize',\n                params: {\n                  page: 0,\n                  size: 5\n                }\n              }).then(function (response) {\n                var resp = [];\n                var values = [];\n                var products = [];\n                console.log(response);\n                resp = response.data.listRecyclingProductsValue;\n                resp.forEach(function (p) {\n                  values.push(p.countMktProducts);\n                  products.push(p.product.product);\n                });\n                setDataMaxSize({\n                  labels: products,\n                  datasets: [{\n                    label: 'quantidade',\n                    borderWidth: 0,\n                    backgroundColor: colors,\n                    data: values\n                  }]\n                });\n                formatToolTips('number');\n              }).catch(function (error) {});\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _loadDashProductSize.apply(this, arguments);\n  }\n\n  ;\n\n  function loadDashProductUpdate() {\n    return _loadDashProductUpdate.apply(this, arguments);\n  }\n\n  function _loadDashProductUpdate() {\n    _loadDashProductUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              axiosService({\n                method: 'GET',\n                url: '/recycling/logMktProductUpdate',\n                params: {\n                  page: 0,\n                  size: 5\n                }\n              }).then(function (response) {\n                var resp = [];\n                var countLogs = [];\n                var products = [];\n                console.log(response);\n                resp = response.data.listRecyclingProductsValue;\n                resp.forEach(function (p) {\n                  countLogs.push(p.countLogs);\n                  products.push(p.product.product);\n                });\n                setDataMaxUpdate({\n                  labels: products,\n                  datasets: [{\n                    order: 0,\n                    label: 'alterações',\n                    borderWidth: 0,\n                    backgroundColor: colors,\n                    data: countLogs\n                  }]\n                });\n                formatToolTips('number');\n              }).catch(function (error) {});\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _loadDashProductUpdate.apply(this, arguments);\n  }\n\n  ;\n\n  function loadInfoProductMaxValueAndStation() {\n    return _loadInfoProductMaxValueAndStation.apply(this, arguments);\n  }\n\n  function _loadInfoProductMaxValueAndStation() {\n    _loadInfoProductMaxValueAndStation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              axiosService({\n                method: 'GET',\n                url: '/recycling/mktProductMaxValueAndStation',\n                params: {\n                  page: 0,\n                  size: 1\n                }\n              }).then(function (response) {\n                var resp = [];\n                console.log(response);\n                resp = response.data.listRecyclingProductsValue;\n                resp.forEach(function (p) {\n                  debugger;\n                  setProductMaxValue({\n                    productValue: p.maxValue,\n                    productName: p.product.product,\n                    stationName: p.station.nmFantazy,\n                    stationState: p.station.state,\n                    stationCity: p.station.city\n                  });\n                });\n              }).catch(function (error) {});\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _loadInfoProductMaxValueAndStation.apply(this, arguments);\n  }\n\n  ;\n\n  function formatToolTips(type) {\n    console.log(type);\n\n    if (type === 'amount') {\n      setTooltipsAmount({\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var unit = 'R$ '; // var label = data.datasets[tooltipItem.datasetIndex].label;\n            // label = (label) ? label + ': ' + unit + ' ' : ''\n\n            var num = parseFloat(tooltipItem.value).toFixed(2);\n            return unit + num.toString().replace('.', ',');\n          }\n        }\n      });\n    }\n\n    if (type === 'number') {\n      setTooltipsNumber({\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            return tooltipItem.value.toString();\n          }\n        }\n      });\n    }\n  }\n\n  function legendFormatter() {\n    setLegendFormat({\n      display: true,\n      position: 'bottom',\n      labels: {\n        boxWidth: 12\n      }\n    });\n  }\n\n  function scalesFormatter() {\n    setScalesFormat({\n      yAxes: [{\n        ticks: {\n          min: 0\n        }\n      }]\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerResultFind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '260px',\n      maxWidth: '270px',\n      margin: '10px',\n      padding: '10px',\n      backgroundColor: '#DDD',\n      borderRadius: '5px',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '35%',\n      marginRight: '10px',\n      color: '#2B4748'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 91\n    }\n  }, \"Produto em alta\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#2B4748'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, \" R$ \", /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      fontSize: '60px',\n      color: '#B9C400'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 65\n    }\n  }, productMaxValue.productValue)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '15px',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      fontSize: '18px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 103\n    }\n  }, productMaxValue.productName)))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '260px',\n      maxWidth: '270px',\n      margin: '10px',\n      padding: '10px',\n      backgroundColor: '#DDD',\n      borderRadius: '5px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      fontSize: '17px',\n      color: '#2B4748'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 30\n    }\n  }, \"Posto de coleta que paga este valor pelo \", productMaxValue.productName, \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      fontSize: '30px',\n      color: '#B9C400'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 30\n    }\n  }, productMaxValue.stationName)))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '260px',\n      maxWidth: '270px',\n      margin: '10px',\n      padding: '20px',\n      backgroundColor: '#F3F6F6',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: '#2B4748',\n      fontSize: '14px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 117\n    }\n  }, \"Produtos com maior valor pago por Kg\")), /*#__PURE__*/React.createElement(Bar, {\n    height: 200,\n    width: 250,\n    data: dataMaxValue,\n    options: {\n      title: {\n        display: true,\n        text: '',\n        fontSize: 14\n      },\n      legend: legendFormat,\n      tooltips: tooltipsAmount,\n      scales: scalesFormat\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '260px',\n      maxWidth: '270px',\n      margin: '10px',\n      padding: '20px',\n      backgroundColor: '#F3F6F6',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: '#2B4748',\n      fontSize: '14px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 117\n    }\n  }, \"Produtos e valor por Kg\")), /*#__PURE__*/React.createElement(Bar, {\n    height: 200,\n    width: 250,\n    data: dataValue,\n    options: {\n      title: {\n        display: true,\n        text: '',\n        fontSize: 14\n      },\n      legend: legendFormat,\n      tooltips: tooltipsAmount,\n      scales: scalesFormat\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '260px',\n      maxWidth: '270px',\n      margin: '10px',\n      padding: '20px',\n      backgroundColor: '#F3F6F6',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: '#2B4748',\n      fontSize: '14px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 117\n    }\n  }, \"Produtos com mais anunciados\")), /*#__PURE__*/React.createElement(Doughnut, {\n    height: 200,\n    width: 250,\n    data: dataMaxSize,\n    options: {\n      title: {\n        display: true,\n        text: '',\n        fontSize: 14\n      },\n      legend: legendFormat\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '260px',\n      maxWidth: '270px',\n      margin: '10px',\n      padding: '20px',\n      backgroundColor: '#F3F6F6',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: '#2B4748',\n      fontSize: '14px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 117\n    }\n  }, \"Maior altera\\xE7\\xE3o de valor\")), /*#__PURE__*/React.createElement(Bar, {\n    height: 200,\n    width: 250,\n    data: dataMaxUpdate,\n    options: {\n      title: {\n        display: true,\n        text: '',\n        fontSize: 14\n      },\n      legend: legendFormat,\n      tooltips: tooltipsNumber,\n      scales: scalesFormat\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default Home; // console.log(resp)\n// resp.map(p => {\n//     products.push([\n//         p.product.product,\n//         parseFloat(p.averageValue.replace(',', '.'))\n//     ]);          \n// })\n// function googleChart() {\n//     return(\n//             <Chart\n//                             width='300px'\n//                             height='200px'\n//                             chartType=\"BarChart\"\n//                             data={data}\n//                             options={options, {\n//                                 // chartArea: { width: '100%' },\n//                                 // chartArea: { width: '50%', height: '70%' },\n//                                 title: 'Produtos com maior valor ofertado.',\n//                                 width: '200px',\n//                                 height: '200px',\n//                                 // responsive: true,\n//                                 bar: { groupWidth: '50%' },\n//                                 colors: ['#DDDF4B', '#2B4748'],\n//                                 // titlePosition: 'in',\n//                                 // axisTitlesPosition: 'in',\n//                                 // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \n//                                 legend: {position: 'bottom', textStyle: {color: '#2B4748', fontSize: 10}},\n//                                 hAxis: {format: 'currency'},\n//                                 // hAxis: {format: 'R$#,##',},\n//                                 // legend: {display: false}\n//                                 // legend: { width: '10%' },\n//                                 // isStacked: true,\n//                             }}\n//                             rootProps={{ 'data-testid': '3' }}\n//                         />\n//     )\n// }","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/pages/Home/index.js"],"names":["React","useEffect","useState","Bar","Doughnut","axiosService","Home","legendFormat","setLegendFormat","scalesFormat","setScalesFormat","tooltipsNumber","setTooltipsNumber","tooltipsAmount","setTooltipsAmount","labels","datasets","dataValue","setDataValue","dataMaxValue","setDataMaxValue","dataMaxSize","setDataMaxSize","dataMaxUpdate","setDataMaxUpdate","colors","productValue","productName","stationName","stationState","stationCity","productMaxValue","setProductMaxValue","loadInfoProductMaxValueAndStation","loadDashProductValue","loadDashProductSize","loadDashProductUpdate","legendFormatter","scalesFormatter","method","url","params","page","size","then","response","resp","maxValues","minValues","averageValues","products","console","log","data","listRecyclingProductsValue","forEach","p","push","parseFloat","maxValue","replace","minValue","averageValue","product","label","backgroundColor","formatToolTips","catch","error","values","countMktProducts","borderWidth","countLogs","order","station","nmFantazy","state","city","type","callbacks","tooltipItem","unit","num","value","toFixed","toString","display","position","boxWidth","yAxes","ticks","min","flexWrap","alignItems","justifyContent","width","maxWidth","margin","padding","borderRadius","flexDirection","marginRight","color","fontSize","textAlign","title","text","legend","tooltips","scales"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Bar, Doughnut} from 'react-chartjs-2';\r\n\r\nimport './home.css';\r\nimport { axiosService } from '../../service/axios';\r\n\r\nfunction Home() {\r\n\r\n    const [legendFormat, setLegendFormat] = useState({})\r\n    const [scalesFormat, setScalesFormat] = useState({})\r\n    const [tooltipsNumber, setTooltipsNumber] = useState({})\r\n    const [tooltipsAmount, setTooltipsAmount] = useState({})\r\n    const [dataValue, setDataValue] = useState({labels:[], datasets:[{}]})\r\n    const [dataMaxValue, setDataMaxValue] = useState({labels:[], datasets:[{}]})\r\n    const [dataMaxSize, setDataMaxSize] = useState({labels:[], datasets:[{}]})\r\n    const [dataMaxUpdate, setDataMaxUpdate] = useState({labels:[], datasets:[{}]})\r\n    const [colors] = useState(['#80A51B','#547F82', '#5B7813', '#00AB97','#B9C400'],);\r\n    const [productMaxValue, setProductMaxValue] = useState({\r\n        productValue: '',productName: '', stationName: '',stationState: '',stationCity: ''\r\n    })\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        loadInfoProductMaxValueAndStation();\r\n        loadDashProductValue();\r\n        loadDashProductSize();\r\n        loadDashProductUpdate();\r\n        legendFormatter();\r\n        scalesFormatter();\r\n    },[]);\r\n\r\n    async function loadDashProductValue() {\r\n        axiosService({\r\n            method:'GET',\r\n            url:'/recycling/mktProductValue',\r\n            params:{\r\n                page:0,\r\n                size:5\r\n            }\r\n        }).then(response => {\r\n            let resp = [];\r\n            let maxValues = [];\r\n            let minValues = [];\r\n            let averageValues = [];\r\n            let products = [];\r\n            console.log(response)\r\n            resp = response.data.listRecyclingProductsValue;          \r\n            resp.forEach((p) => {\r\n                maxValues.push(parseFloat(p.maxValue.replace(',', '.')));\r\n                minValues.push(parseFloat(p.minValue.replace(',', '.')));\r\n                averageValues.push(parseFloat(p.averageValue.replace(',', '.')));\r\n                products.push(p.product.product)         \r\n            })\r\n            setDataMaxValue({\r\n                labels:products,\r\n                datasets:[{label: 'valor máximo/Kg', backgroundColor: colors,data:maxValues}]\r\n            })\r\n            setDataValue({\r\n                labels:products,\r\n                datasets:[\r\n                    {label: 'valor mínimo/Kg', backgroundColor: '#547F82',data:minValues},\r\n                    {label: 'valor máximo/Kg', backgroundColor: '#B9C400',data:maxValues},\r\n                    {label: 'valor médio/Kg', backgroundColor: '#00AB97',data:averageValues},\r\n                ]\r\n            })\r\n            formatToolTips('amount');           \r\n        }).catch(error => {\r\n        })\r\n    };\r\n\r\n    async function loadDashProductSize() {\r\n        axiosService({\r\n            method:'GET',\r\n            url:'/recycling/mktProductSize',\r\n            params:{\r\n                page:0,\r\n                size:5\r\n            }\r\n        }).then(response => {\r\n            let resp = [];\r\n            let values = [];\r\n            let products = [];\r\n            console.log(response)\r\n            resp = response.data.listRecyclingProductsValue;          \r\n            resp.forEach((p) => {\r\n                values.push(p.countMktProducts);\r\n                products.push(p.product.product)         \r\n            })\r\n            setDataMaxSize({\r\n                labels:products,\r\n                datasets:[{label: 'quantidade', borderWidth:0, backgroundColor: colors, data:values}]\r\n            })\r\n            formatToolTips('number');            \r\n        }).catch(error => {\r\n        })\r\n    };\r\n\r\n\r\n    async function loadDashProductUpdate() {\r\n        axiosService({\r\n            method:'GET',\r\n            url:'/recycling/logMktProductUpdate',\r\n            params:{\r\n                page:0,\r\n                size:5\r\n            }\r\n        }).then(response => {\r\n            let resp = [];\r\n            let countLogs = [];\r\n            let products = [];\r\n            console.log(response)\r\n            resp = response.data.listRecyclingProductsValue;          \r\n            resp.forEach((p) => {\r\n                countLogs.push(p.countLogs);\r\n                products.push(p.product.product)         \r\n            })\r\n            setDataMaxUpdate({\r\n                labels:products,\r\n                datasets:[{order:0,label: 'alterações', borderWidth:0, backgroundColor: colors, data:countLogs}]\r\n            })\r\n            formatToolTips('number');            \r\n        }).catch(error => {\r\n        })\r\n    };\r\n\r\n    async function loadInfoProductMaxValueAndStation() {\r\n        axiosService({\r\n            method:'GET',\r\n            url:'/recycling/mktProductMaxValueAndStation',\r\n            params:{\r\n                page:0,\r\n                size:1\r\n            }\r\n        }).then(response => {\r\n            let resp = [];\r\n            console.log(response)\r\n            resp = response.data.listRecyclingProductsValue;          \r\n            resp.forEach((p) => {\r\n                debugger;\r\n                setProductMaxValue({\r\n                    productValue: p.maxValue,\r\n                    productName: p.product.product,\r\n                    stationName: p.station.nmFantazy,\r\n                    stationState: p.station.state,\r\n                    stationCity: p.station.city,    \r\n                })\r\n            })    \r\n        }).catch(error => {\r\n        })\r\n    };\r\n\r\n\r\n    function formatToolTips(type){\r\n        console.log(type)\r\n        if(type === 'amount') {\r\n            setTooltipsAmount({\r\n                callbacks: {            \r\n                    label: function(tooltipItem, data) {\r\n                        var unit = 'R$ ';\r\n                        // var label = data.datasets[tooltipItem.datasetIndex].label;\r\n                        // label = (label) ? label + ': ' + unit + ' ' : ''\r\n                        var num = parseFloat(tooltipItem.value).toFixed(2);\r\n                        return unit + num.toString().replace('.', ',');\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        if(type === 'number') {\r\n            setTooltipsNumber({\r\n                callbacks: {            \r\n                    label: function(tooltipItem, data) {\r\n                        return tooltipItem.value.toString();\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function legendFormatter() {\r\n        setLegendFormat({display:true, position:'bottom', labels:{boxWidth:12}});\r\n    }\r\n\r\n    function scalesFormatter() {\r\n        setScalesFormat({yAxes: [{ticks: { min: 0}}]});\r\n    }\r\n        \r\n    return(\r\n        <div id='containerPage'>\r\n            <div id='containerResultFind'>\r\n                <div style={{display:'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent:'space-between'}}>\r\n                    <div style={{width: '260px', maxWidth: '270px', margin: '10px', padding:'10px', backgroundColor: '#DDD', borderRadius: '5px', display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent:'center'}}>\r\n                        <div style={{width:'35%', marginRight: '10px', color: '#2B4748'}}><strong style={{fontSize: '18px'}}>Produto em alta</strong></div>\r\n                        <div style={{color: '#2B4748'}}>\r\n                            <div style={{fontSize: '15px'}}> R$ <strong style={{fontSize: '60px', color: '#B9C400'}}>{productMaxValue.productValue}</strong></div>\r\n                            <div style={{fontSize: '15px', display:'flex', justifyContent: 'center'}}><strong style={{fontSize: '18px', textAlign: 'center'}}>{productMaxValue.productName}</strong></div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{width: '260px', maxWidth: '270px', margin: '10px', padding:'10px', backgroundColor: '#DDD', borderRadius: '5px',  display: 'flex', flexDirection: 'column', justifyContent:'center'}}>\r\n                        <div><label style={{fontSize: '17px', color: '#2B4748'}}>Posto de coleta que paga este valor pelo {productMaxValue.productName}:</label></div>\r\n                        <div><strong style={{fontSize: '30px', color: '#B9C400'}}>{productMaxValue.stationName}</strong></div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div style={{display:'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent:'space-between'}}>\r\n                    <div style={{width: '260px', maxWidth: '270px', margin: '10px', padding:'20px', backgroundColor: '#F3F6F6', borderRadius: '5px'}}>\r\n                        <div style={{display:'flex', alignItems: 'center', justifyContent: 'center', width:'100%'}}><strong style={{color: '#2B4748', fontSize: '14px', textAlign:'center'}}>Produtos com maior valor pago por Kg</strong></div>\r\n                        <Bar\r\n                            height={200}\r\n                            width={250}\r\n                            data={dataMaxValue}\r\n                            options={{\r\n                                title:{display:true,text:'',fontSize:14},\r\n                                legend: legendFormat,     \r\n                                tooltips: tooltipsAmount,\r\n                                scales: scalesFormat   \r\n                            }}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div style={{width: '260px', maxWidth: '270px', margin: '10px', padding:'20px', backgroundColor: '#F3F6F6', borderRadius: '5px'}}>\r\n                        <div style={{display:'flex', alignItems: 'center', justifyContent: 'center', width:'100%'}}><strong style={{color: '#2B4748', fontSize: '14px', textAlign:'center'}}>Produtos e valor por Kg</strong></div>\r\n                        <Bar\r\n                            height={200}\r\n                            width={250}\r\n                            data={dataValue}\r\n                            options={{\r\n                                title:{display:true,text:'',fontSize:14},\r\n                                legend:legendFormat,     \r\n                                tooltips: tooltipsAmount,\r\n                                scales: scalesFormat   \r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div style={{display:'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent:'space-between'}}>\r\n                    \r\n                    <div style={{width: '260px', maxWidth: '270px', margin: '10px', padding:'20px', backgroundColor: '#F3F6F6', borderRadius: '5px'}}>\r\n                        <div style={{display:'flex', alignItems: 'center', justifyContent: 'center', width:'100%'}}><strong style={{color: '#2B4748', fontSize: '14px', textAlign:'center'}}>Produtos com mais anunciados</strong></div>\r\n                        <Doughnut\r\n                            height={200}\r\n                            width={250}\r\n                            data={dataMaxSize}\r\n                            options={{\r\n                                title:{display:true,text:'',fontSize:14},\r\n                                legend:legendFormat,     \r\n                            }}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div style={{width: '260px', maxWidth: '270px', margin: '10px', padding:'20px', backgroundColor: '#F3F6F6', borderRadius: '5px'}}>\r\n                        <div style={{display:'flex', alignItems: 'center', justifyContent: 'center', width:'100%'}}><strong style={{color: '#2B4748', fontSize: '14px', textAlign:'center'}}>Maior alteração de valor</strong></div>\r\n                        <Bar\r\n                            height={200}\r\n                            width={250}\r\n                            data={dataMaxUpdate}\r\n                            options={{\r\n                                title:{display:true,text:'',fontSize:14},\r\n                                legend:legendFormat,     \r\n                                tooltips: tooltipsNumber,\r\n                                scales: scalesFormat\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    \r\n                </div>     \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default Home;\r\n\r\n\r\n\r\n// console.log(resp)\r\n// resp.map(p => {\r\n//     products.push([\r\n//         p.product.product,\r\n//         parseFloat(p.averageValue.replace(',', '.'))\r\n//     ]);          \r\n// })\r\n\r\n// function googleChart() {\r\n//     return(\r\n//             <Chart\r\n//                             width='300px'\r\n//                             height='200px'\r\n//                             chartType=\"BarChart\"\r\n//                             data={data}\r\n//                             options={options, {\r\n//                                 // chartArea: { width: '100%' },\r\n//                                 // chartArea: { width: '50%', height: '70%' },\r\n//                                 title: 'Produtos com maior valor ofertado.',\r\n//                                 width: '200px',\r\n//                                 height: '200px',\r\n//                                 // responsive: true,\r\n//                                 bar: { groupWidth: '50%' },\r\n//                                 colors: ['#DDDF4B', '#2B4748'],\r\n//                                 // titlePosition: 'in',\r\n//                                 // axisTitlesPosition: 'in',\r\n//                                 // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \r\n//                                 legend: {position: 'bottom', textStyle: {color: '#2B4748', fontSize: 10}},\r\n//                                 hAxis: {format: 'currency'},\r\n//                                 // hAxis: {format: 'R$#,##',},\r\n//                                 // legend: {display: false}\r\n//                                 // legend: { width: '10%' },\r\n//                                 // isStacked: true,\r\n                                \r\n//                             }}\r\n//                             rootProps={{ 'data-testid': '3' }}\r\n//                         />\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}