{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\src\\\\pages\\\\Home\\\\index.js\",\n    _this = this;\n\nimport React, { useEffect, useState } from 'react';\nimport { Chart } from \"react-google-charts\";\nimport './home.css';\nimport { axiosService } from '../../service/axios';\n\nfunction Home() {\n  var _useState = useState({\n    title: 'Gráfico de Pizza'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      format = _useState6[0],\n      setFormat = _useState6[1]; // const [data, setData] = useState([\n  //     ['Linguagens', 'Quantidade'],\n  //     ['React', 100],\n  //     ['Angula', 80],\n  //     ['Vue', 50],\n  // ])\n\n\n  useEffect(function () {\n    loadDashProductValue();\n    formatValue();\n  }, []);\n\n  function loadDashProductValue() {\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  function _loadDashProductValue() {\n    _loadDashProductValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              axiosService({\n                method: 'GET',\n                url: '/recycling/mktProductValue',\n                params: {\n                  page: 0,\n                  size: 5\n                }\n              }).then(function (response) {\n                var values = [];\n                var products = [['Produtos', 'Valor']];\n                var resp = [];\n                resp = response.data.listRecyclingProductsValue;\n                console.log(resp);\n                resp.map(function (p) {\n                  products.push([p.product.product, parseFloat(p.averageValue.replace(',', '.'))]);\n                });\n                setData(products);\n                console.log('produtos: ' + products);\n              }).catch(function (error) {});\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  ;\n\n  var formatValue = function formatValue() {//     var formatter = new google.visualization.NumberFormat({\n    //         decimalSymbol: ',',\n    //         groupingSymbol: '.',\n    //         prefix: 'R$ '\n    //   });\n    // google.charts.load('current', {'packages':['corechart'], 'language': 'ja'});\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerResultFind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"googleChart\", {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default Home;\n\nvar googleChart = function googleChart() {\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: \"300px\",\n    height: \"200px\",\n    chartType: \"BarChart\",\n    data: props.data,\n    options: (props.options, {\n      // chartArea: { width: '100%' },\n      // chartArea: { width: '50%', height: '70%' },\n      title: 'Produtos com maior valor ofertado.',\n      width: '200px',\n      height: '200px',\n      // responsive: true,\n      bar: {\n        groupWidth: '50%'\n      },\n      colors: ['#DDDF4B', '#2B4748'],\n      // titlePosition: 'in',\n      // axisTitlesPosition: 'in',\n      // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \n      legend: {\n        position: 'bottom',\n        textStyle: {\n          color: '#2B4748',\n          fontSize: 10\n        }\n      },\n      hAxis: {\n        format: 'currency'\n      } // hAxis: {format: 'R$#,##',},\n      // legend: {display: false}\n      // legend: { width: '10%' },\n      // isStacked: true,\n\n    }),\n    rootProps: {\n      'data-testid': '3'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/pages/Home/index.js"],"names":["React","useEffect","useState","Chart","axiosService","Home","title","options","setOptions","data","setData","format","setFormat","loadDashProductValue","formatValue","method","url","params","page","size","then","response","values","products","resp","listRecyclingProductsValue","console","log","map","p","push","product","parseFloat","averageValue","replace","catch","error","googleChart","props","width","height","bar","groupWidth","colors","legend","position","textStyle","color","fontSize","hAxis"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport './home.css';\r\nimport { axiosService } from '../../service/axios';\r\n\r\nfunction Home() {\r\n\r\n    const [options, setOptions] = useState({\r\n        title: 'Gráfico de Pizza'\r\n    })\r\n    const [data, setData] = useState([])\r\n    const [format, setFormat] = useState({})\r\n    // const [data, setData] = useState([\r\n    //     ['Linguagens', 'Quantidade'],\r\n    //     ['React', 100],\r\n    //     ['Angula', 80],\r\n    //     ['Vue', 50],\r\n    // ])\r\n    \r\n    useEffect(() => {\r\n        loadDashProductValue();\r\n        formatValue();\r\n    },[]);\r\n\r\n    async function loadDashProductValue() {\r\n        axiosService({\r\n            method:'GET',\r\n            url:'/recycling/mktProductValue',\r\n            params:{\r\n                page:0,\r\n                size:5\r\n            }\r\n        }).then(response => {\r\n            let values = [];\r\n            let products = [['Produtos', 'Valor']];\r\n            let resp = [];\r\n            resp = response.data.listRecyclingProductsValue;\r\n            \r\n            console.log(resp)\r\n            resp.map(p => {\r\n                products.push([\r\n                    p.product.product,\r\n                    parseFloat(p.averageValue.replace(',', '.'))\r\n                ]);          \r\n            })\r\n            setData(products);\r\n            console.log('produtos: ' + products);\r\n        }).catch(error => {\r\n\r\n        })\r\n    };\r\n\r\n    const formatValue = () => {\r\n    //     var formatter = new google.visualization.NumberFormat({\r\n    //         decimalSymbol: ',',\r\n    //         groupingSymbol: '.',\r\n    //         prefix: 'R$ '\r\n    //   });\r\n    // google.charts.load('current', {'packages':['corechart'], 'language': 'ja'});\r\n    }\r\n\r\n\r\n        \r\n    return(\r\n        <div id='containerPage'>\r\n            <div id='containerResultFind'>\r\n                \r\n                    <googleChart data={data} options={options}/>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default Home;\r\n\r\nconst googleChart = () => {\r\n    return(\r\n\r\n        <Chart\r\n                            width='300px'\r\n                            height='200px'\r\n                            chartType=\"BarChart\"\r\n                            data={props.data}\r\n                            options={props.options, {\r\n                                // chartArea: { width: '100%' },\r\n                                // chartArea: { width: '50%', height: '70%' },\r\n                                title: 'Produtos com maior valor ofertado.',\r\n                                width: '200px',\r\n                                height: '200px',\r\n                                // responsive: true,\r\n                                bar: { groupWidth: '50%' },\r\n                                colors: ['#DDDF4B', '#2B4748'],\r\n                                // titlePosition: 'in',\r\n                                // axisTitlesPosition: 'in',\r\n                                // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \r\n                                legend: {position: 'bottom', textStyle: {color: '#2B4748', fontSize: 10}},\r\n                                hAxis: {format: 'currency'},\r\n                                // hAxis: {format: 'R$#,##',},\r\n                                // legend: {display: false}\r\n                                // legend: { width: '10%' },\r\n                                // isStacked: true,\r\n                                \r\n                            }}\r\n                            rootProps={{ 'data-testid': '3' }}\r\n                        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}