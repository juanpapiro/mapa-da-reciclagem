{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport './home.css';\nimport { axiosService } from '../../service/axios';\n\nfunction Home() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      tooltipsValue = _useState2[0],\n      setTooltipsValue = _useState2[1];\n\n  var _useState3 = useState({\n    labels: [],\n    datasets: [{\n      label: '',\n      data: [],\n      backgroundColor: '',\n      borderColor: '',\n      borderWidth: ''\n    }]\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataMaxValue = _useState4[0],\n      setDataMaxValue = _useState4[1];\n\n  useEffect(function () {\n    loadDashProductValue();\n  }, []);\n\n  function loadDashProductValue() {\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  function _loadDashProductValue() {\n    _loadDashProductValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              axiosService({\n                method: 'GET',\n                url: '/recycling/mktProductValue',\n                params: {\n                  page: 0,\n                  size: 5\n                }\n              }).then(function (response) {\n                formatGraficMaxValue(response);\n              }).catch(function (error) {});\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  ;\n\n  function formatGraficMaxValue(response) {\n    var resp = [];\n    var values = [];\n    var products = [];\n    resp = response.data.listRecyclingProductsValue;\n    console.log(resp);\n    resp.forEach(function (p, i) {\n      values.push(parseFloat(p.averageValue.replace(',', '.')));\n      products.push(p.product.product);\n    });\n    setDataMaxValue({\n      labels: products,\n      datasets: [{\n        label: 'valor',\n        backgroundColor: '#DDDF4B',\n        data: values\n      }]\n    });\n    formatToolTips();\n  }\n\n  function formatToolTips() {\n    setTooltipsValue({\n      callbacks: {\n        label: function label(tooltipItem, data) {\n          var unit = 'R$ '; // var label = data.datasets[tooltipItem.datasetIndex].label;\n          // label = (label) ? label + ': ' + unit + ' ' : ''\n\n          return unit + tooltipItem.value.toString().replace('.', ',');\n        }\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerResultFind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    height: 250,\n    width: 250,\n    data: dataMaxValue,\n    options: {\n      title: {\n        display: true,\n        text: 'Produtos com maior valor pago por Kg',\n        fontSize: 14\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltips: tooltipsValue\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    height: 250,\n    width: 250,\n    data: dataMaxValue,\n    options: {\n      title: {\n        display: true,\n        text: 'Produtos com maior valor pago por Kg',\n        fontSize: 14\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltips: tooltipsValue\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default Home; // console.log(resp)\n// resp.map(p => {\n//     products.push([\n//         p.product.product,\n//         parseFloat(p.averageValue.replace(',', '.'))\n//     ]);          \n// })\n// function googleChart() {\n//     return(\n//             <Chart\n//                             width='300px'\n//                             height='200px'\n//                             chartType=\"BarChart\"\n//                             data={data}\n//                             options={options, {\n//                                 // chartArea: { width: '100%' },\n//                                 // chartArea: { width: '50%', height: '70%' },\n//                                 title: 'Produtos com maior valor ofertado.',\n//                                 width: '200px',\n//                                 height: '200px',\n//                                 // responsive: true,\n//                                 bar: { groupWidth: '50%' },\n//                                 colors: ['#DDDF4B', '#2B4748'],\n//                                 // titlePosition: 'in',\n//                                 // axisTitlesPosition: 'in',\n//                                 // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \n//                                 legend: {position: 'bottom', textStyle: {color: '#2B4748', fontSize: 10}},\n//                                 hAxis: {format: 'currency'},\n//                                 // hAxis: {format: 'R$#,##',},\n//                                 // legend: {display: false}\n//                                 // legend: { width: '10%' },\n//                                 // isStacked: true,\n//                             }}\n//                             rootProps={{ 'data-testid': '3' }}\n//                         />\n//     )\n// }","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/pages/Home/index.js"],"names":["React","useEffect","useState","Bar","axiosService","Home","tooltipsValue","setTooltipsValue","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","dataMaxValue","setDataMaxValue","loadDashProductValue","method","url","params","page","size","then","response","formatGraficMaxValue","catch","error","resp","values","products","listRecyclingProductsValue","console","log","forEach","p","i","push","parseFloat","averageValue","replace","product","formatToolTips","callbacks","tooltipItem","unit","value","toString","display","justifyContent","flexDirection","padding","title","text","fontSize","legend","position","tooltips"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Bar} from 'react-chartjs-2'; \r\n\r\nimport './home.css';\r\nimport { axiosService } from '../../service/axios';\r\n\r\nfunction Home() {\r\n\r\n    const [tooltipsValue, setTooltipsValue] = useState({})\r\n    const [dataMaxValue, setDataMaxValue] = useState({\r\n        labels:[],\r\n        datasets:[{\r\n            label:'',\r\n            data:[],\r\n            backgroundColor: '',\r\n            borderColor: '',\r\n            borderWidth: '',\r\n        }]\r\n    })\r\n\r\n    \r\n    useEffect(() => {\r\n        loadDashProductValue();\r\n    },[]);\r\n\r\n    async function loadDashProductValue() {\r\n        axiosService({\r\n            method:'GET',\r\n            url:'/recycling/mktProductValue',\r\n            params:{\r\n                page:0,\r\n                size:5\r\n            }\r\n        }).then(response => {\r\n\r\n            formatGraficMaxValue(response);\r\n            \r\n        }).catch(error => {\r\n\r\n        })\r\n    };\r\n\r\n\r\n    function formatGraficMaxValue(response) {\r\n        let resp = [];\r\n        let values = [];\r\n        let products = [];\r\n        resp = response.data.listRecyclingProductsValue;\r\n            \r\n        console.log(resp)\r\n        resp.forEach((p, i) => {\r\n            values.push(parseFloat(p.averageValue.replace(',', '.')));\r\n            products.push(p.product.product)         \r\n        })\r\n    \r\n        setDataMaxValue({\r\n            labels:products,\r\n            datasets:[{\r\n                label: 'valor',\r\n                backgroundColor: '#DDDF4B',\r\n                data:values\r\n            }]\r\n        })\r\n        formatToolTips();  \r\n    }\r\n\r\n    function formatToolTips(){\r\n        setTooltipsValue({\r\n            callbacks: {     \r\n                label: function(tooltipItem, data) {\r\n                    var unit = 'R$ ';\r\n                    // var label = data.datasets[tooltipItem.datasetIndex].label;\r\n                    // label = (label) ? label + ': ' + unit + ' ' : ''\r\n                    return unit + tooltipItem.value.toString().replace('.', ',');\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n        \r\n    return(\r\n        <div id='containerPage'>\r\n            <div id='containerResultFind'>\r\n                <div style={{display:'flex', justifyContent:'space-between', flexDirection: 'row'}}>\r\n                    <div style={{padding:'20px'}}>\r\n                        <Bar\r\n                            height={250}\r\n                            width={250}\r\n                            data={dataMaxValue}\r\n                            options={{\r\n                                title:{\r\n                                display:true,\r\n                                text:'Produtos com maior valor pago por Kg',\r\n                                fontSize:14\r\n                                },\r\n                                legend:{\r\n                                display:true,\r\n                                position:'bottom'\r\n                                },     \r\n                                tooltips: tooltipsValue     \r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Bar\r\n                            height={250}\r\n                            width={250}\r\n                            data={dataMaxValue}\r\n                            options={{\r\n                                title:{\r\n                                display:true,\r\n                                text:'Produtos com maior valor pago por Kg',\r\n                                fontSize:14\r\n                                },\r\n                                legend:{\r\n                                display:true,\r\n                                position:'bottom'\r\n                                },     \r\n                                tooltips: tooltipsValue     \r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>     \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default Home;\r\n\r\n\r\n\r\n// console.log(resp)\r\n// resp.map(p => {\r\n//     products.push([\r\n//         p.product.product,\r\n//         parseFloat(p.averageValue.replace(',', '.'))\r\n//     ]);          \r\n// })\r\n\r\n// function googleChart() {\r\n//     return(\r\n//             <Chart\r\n//                             width='300px'\r\n//                             height='200px'\r\n//                             chartType=\"BarChart\"\r\n//                             data={data}\r\n//                             options={options, {\r\n//                                 // chartArea: { width: '100%' },\r\n//                                 // chartArea: { width: '50%', height: '70%' },\r\n//                                 title: 'Produtos com maior valor ofertado.',\r\n//                                 width: '200px',\r\n//                                 height: '200px',\r\n//                                 // responsive: true,\r\n//                                 bar: { groupWidth: '50%' },\r\n//                                 colors: ['#DDDF4B', '#2B4748'],\r\n//                                 // titlePosition: 'in',\r\n//                                 // axisTitlesPosition: 'in',\r\n//                                 // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \r\n//                                 legend: {position: 'bottom', textStyle: {color: '#2B4748', fontSize: 10}},\r\n//                                 hAxis: {format: 'currency'},\r\n//                                 // hAxis: {format: 'R$#,##',},\r\n//                                 // legend: {display: false}\r\n//                                 // legend: { width: '10%' },\r\n//                                 // isStacked: true,\r\n                                \r\n//                             }}\r\n//                             rootProps={{ 'data-testid': '3' }}\r\n//                         />\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}