{"ast":null,"code":"export var notNull = function notNull(form) {\n  var errors = [];\n\n  if (form.nmFantazy === '' || form.nmFantazy === null) {\n    errors.push(['nmFantazy', 'Nome fantazia deve ser preenchido.']);\n  }\n\n  if (form.doc === '' || form.doc === null) {\n    errors.push(['doc', 'Documento deve ser preenchido.']);\n  }\n\n  if (form.zip === '' || form.zip === null) {\n    errors.push(['zip', 'Cep deve ser preenchido.']);\n  }\n\n  if (form.street === '' || form.street == null) {\n    errors.push(['street', 'Nome da rua deve ser preenchido.']);\n  }\n\n  if (form.number === '' || form.number == null) {\n    errors.push(['number', 'Número deve ser preenchido.']);\n  }\n\n  if (form.neighborhood === '' || form.neighborhood == null) {\n    errors.push(['neighborhood', 'Bairro deve ser preenchido.']);\n  }\n\n  if (form.city === '' || form.city === null) {\n    errors.push(['city', 'Cidade deve ser preenchido.']);\n  }\n\n  if (form.state === '' || form.state === null) {\n    errors.push(['state', 'Estado deve ser preenchido.']);\n  }\n\n  return errors;\n};\nexport var validCpf = function validCpf(cpf) {\n  debugger;\n  var verify = [];\n  cpf = cpf.replace(/\\D/g, '');\n  var arrayVerifyDig1 = [10, 9, 8, 7, 6, 5, 4, 3, 2];\n  var arrayVerifyDig2 = [11].concat(arrayVerifyDig1);\n  var arrayMultiply = [];\n  var arrayCpf = Array.from(cpf);\n  if (arrayCpf.filter(function (num) {\n    return num === arrayCpf[0];\n  }).length === 11) return ['doc', 'Cpf inválido!'];\n  arrayVerifyDig1.forEach(function (num, i) {\n    return arrayMultiply.push(num * arrayCpf[i]);\n  });\n  var mod1 = arrayMultiply.reduce(function (sum, num) {\n    return sum + num;\n  }, 0) * 10 % 11;\n  if ((mod1 === 10 || mod1 === 11) && parseInt(arrayCpf[9]) !== 0) return ['doc', 'Cpf inválido!'];\n  arrayMultiply = [];\n  arrayVerifyDig2.forEach(function (num, i) {\n    return arrayMultiply.push(num * arrayCpf[i]);\n  });\n  var mod2 = arrayMultiply.reduce(function (sum, num) {\n    return sum + num;\n  }, 0) * 10 % 11;\n  if ((mod2 === 10 || mod2 === 11) && parseInt(arrayCpf[10]) === 0) return verify;\n  verify = mod2 === parseInt(arrayCpf[10]) ? verify : ['doc', 'Cpf inválido!'];\n  return verify;\n};\nexport var validCnpj = function validCnpj(cnpj) {\n  debugger;\n  var verify = []; //14.572.457/0001-85\n\n  cnpj = cnpj.replace(/\\D/g, '');\n  var arrayCnpj = Array.from(cnpj);\n  var arrayCnpjRevDv1 = Array.from(cnpj).reverse().splice(2, Array.from(cnpj).length);\n  var arrayVerifyDv1 = [2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5];\n  var arrayMultiply = arrayVerifyDv1.map(function (num, index) {\n    return num * arrayCnpjRevDv1[index];\n  });\n  var modDv1 = arrayMultiply.reduce(function (sum, num) {\n    return sum + num;\n  }, 0) % 11;\n  if ((modDv1 === 0 || modDv1 === 1) && parseInt(arrayCnpj[12]) !== 0) return ['doc', 'Cnpj inválido!'];\n  if (11 - modDv1 !== parseInt(arrayCnpj[12])) return ['doc', 'Cnpj inválido!'];\n  var arrayVerifyDv2 = [].concat(arrayVerifyDv1, [6]);\n  var arrayCnpjRevDv2 = Array.from(cnpj).reverse().splice(1, Array.from(cnpj).length);\n  arrayMultiply = arrayVerifyDv2.map(function (num, index) {\n    return num * arrayCnpjRevDv2[index];\n  });\n  var modDv2 = arrayMultiply.reduce(function (sum, num) {\n    return sum + num;\n  }, 0) % 11;\n  if ((modDv2 === 0 || modDv2 === 1) && parseInt(arrayCnpj[13]) !== 0) return ['doc', 'Cnpj inválido!'];\n  verify = 11 - modDv2 === parseInt(arrayCnpj[13]) ? verify : ['doc', 'Cnpj inválido!'];\n  return verify;\n};\nexport var notNullLabels = function notNullLabels(labels) {\n  var errors = [];\n  labels.forEach(function (label) {\n    if (label[1] === null || label[1] === '') {\n      errors.push([label[0], \"Preenchimento obrigat\\xF3rio!\"]);\n    }\n  });\n  return errors;\n};\nexport var length = function length(labels) {\n  debugger;\n  var errors = [];\n  labels.forEach(function (label) {\n    if (label !== 0) {\n      errors.push([label[0], 'Deve ter ao menos 6 dígitos.']);\n    }\n  });\n  return errors;\n};","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/utils/ValidForm.js"],"names":["notNull","form","errors","nmFantazy","push","doc","zip","street","number","neighborhood","city","state","validCpf","cpf","verify","replace","arrayVerifyDig1","arrayVerifyDig2","arrayMultiply","arrayCpf","Array","from","filter","num","length","forEach","i","mod1","reduce","sum","parseInt","mod2","validCnpj","cnpj","arrayCnpj","arrayCnpjRevDv1","reverse","splice","arrayVerifyDv1","map","index","modDv1","arrayVerifyDv2","arrayCnpjRevDv2","modDv2","notNullLabels","labels","label"],"mappings":"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","sourcesContent":["export const notNull = form => {\r\n    let errors = [];\r\n    if(form.nmFantazy === '' || form.nmFantazy === null){\r\n        errors.push(['nmFantazy','Nome fantazia deve ser preenchido.']);     \r\n    }\r\n    if(form.doc === '' || form.doc === null){\r\n        errors.push(['doc','Documento deve ser preenchido.']);     \r\n    }\r\n    if(form.zip === '' || form.zip === null){\r\n        errors.push(['zip','Cep deve ser preenchido.']);     \r\n    }\r\n    if(form.street === '' || form.street == null){\r\n        errors.push(['street','Nome da rua deve ser preenchido.']);     \r\n    }\r\n    if(form.number === '' || form.number == null){\r\n        errors.push(['number','Número deve ser preenchido.']);     \r\n    }\r\n    if(form.neighborhood === '' || form.neighborhood == null){\r\n        errors.push(['neighborhood','Bairro deve ser preenchido.']);     \r\n    }\r\n    if(form.city === '' || form.city === null){\r\n        errors.push(['city','Cidade deve ser preenchido.']);     \r\n    }\r\n    if(form.state === '' || form.state === null){\r\n        errors.push(['state','Estado deve ser preenchido.']);     \r\n    }\r\n    return errors;\r\n}\r\n\r\nexport const validCpf = (cpf) => {\r\n    debugger;\r\n    let verify = [];\r\n    cpf = cpf.replace(/\\D/g, '');\r\n    let arrayVerifyDig1 = [10, 9, 8, 7, 6, 5, 4, 3, 2];\r\n    let arrayVerifyDig2 = [11, ...arrayVerifyDig1];\r\n    let arrayMultiply = [];\r\n    let arrayCpf = Array.from(cpf);\r\n    if(arrayCpf.filter((num) => num === arrayCpf[0]).length === 11) return ['doc','Cpf inválido!'];\r\n    arrayVerifyDig1.forEach((num, i) => arrayMultiply.push(num * arrayCpf[i]));\r\n    let mod1 = (arrayMultiply.reduce((sum, num) => sum + num, 0) * 10) % 11 ;\r\n    if ((mod1 === 10 || mod1 === 11) && parseInt(arrayCpf[9]) !== 0) return ['doc','Cpf inválido!'];\r\n    arrayMultiply = [];\r\n    arrayVerifyDig2.forEach((num, i) => arrayMultiply.push(num * arrayCpf[i]));\r\n    let mod2 = (arrayMultiply.reduce((sum, num) => sum + num, 0) * 10) % 11;\r\n    if ((mod2 === 10 || mod2 === 11) && parseInt(arrayCpf[10]) === 0) return verify;\r\n    verify = (mod2 === parseInt(arrayCpf[10])) ? verify : ['doc','Cpf inválido!'];\r\n    return verify;\r\n}\r\n\r\nexport const validCnpj = (cnpj) => {\r\n    debugger;\r\n    let verify = []; //14.572.457/0001-85\r\n    cnpj = cnpj.replace(/\\D/g, '');\r\n    let arrayCnpj = Array.from(cnpj);\r\n    let arrayCnpjRevDv1 = Array.from(cnpj).reverse().splice(2, Array.from(cnpj).length);\r\n    let arrayVerifyDv1 = [2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5];\r\n    let arrayMultiply = arrayVerifyDv1.map((num, index) => num * arrayCnpjRevDv1[index])\r\n    let modDv1 = (arrayMultiply.reduce((sum, num) => sum + num, 0)) % 11;\r\n    if((modDv1 === 0 || modDv1 === 1) && parseInt(arrayCnpj[12]) !== 0) return ['doc', 'Cnpj inválido!'];\r\n    if((11 - modDv1 !== parseInt(arrayCnpj[12]))) return ['doc', 'Cnpj inválido!'];\r\n    let arrayVerifyDv2 = [...arrayVerifyDv1, 6];\r\n    let arrayCnpjRevDv2 = Array.from(cnpj).reverse().splice(1, Array.from(cnpj).length);\r\n    arrayMultiply = arrayVerifyDv2.map((num, index) => num * arrayCnpjRevDv2[index]);\r\n    let modDv2 = (arrayMultiply.reduce((sum, num) => sum + num, 0)) % 11;\r\n    if((modDv2 === 0 || modDv2 === 1) && parseInt(arrayCnpj[13]) !== 0) return ['doc', 'Cnpj inválido!'];\r\n    verify = ((11 - modDv2 === parseInt(arrayCnpj[13]))) ? verify : ['doc', 'Cnpj inválido!'];\r\n    return verify;\r\n}\r\n\r\nexport const notNullLabels = (labels) => {\r\n    let errors = [];\r\n    labels.forEach(label => {\r\n        if (label[1] === null || label[1] ==='') {\r\n            errors.push([label[0], `Preenchimento obrigatório!`])\r\n        }\r\n    })\r\n    return errors;\r\n}\r\n\r\nexport const length = (labels) => {\r\n    debugger;\r\n    let errors = [];\r\n    labels.forEach(label => {\r\n        if (label !== 0) {\r\n            errors.push([label[0], 'Deve ter ao menos 6 dígitos.'])\r\n        }\r\n    })\r\n    return errors;\r\n}"]},"metadata":{},"sourceType":"module"}