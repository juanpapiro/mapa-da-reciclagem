{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\juanpapiro\\\\Documents\\\\wspaceweb\\\\mapa-da-reciclagem\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport './home.css';\nimport { axiosService } from '../../service/axios';\n\nfunction Home() {\n  var _useState = useState({\n    title: 'Gráfico de Pizza'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState({\n    labels: [],\n    datasets: [{\n      label: '',\n      data: [],\n      backgroundColor: '#DDDF4B' // borderColor: 'rgba(0,0,0,1)',\n      // borderWidth: 2,\n\n    }]\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      state = _useState6[0],\n      setState = _useState6[1]; // const state = {\n  //     labels: ['January', 'February', 'March',\n  //              'April', 'May'],\n  //     datasets: [\n  //       {\n  //         label: 'Rainfall',\n  //         backgroundColor: '#DDDF4B',\n  //         // borderColor: 'rgba(0,0,0,1)',\n  //         // borderWidth: 2,\n  //         data: [65, 59, 80, 81, 56]\n  //       }\n  //     ]\n  //   }\n\n\n  useEffect(function () {\n    loadDashProductValue();\n    setState({\n      labels: ['January', 'February', 'March', 'April', 'May'],\n      datasets: [{\n        backgroundColor: '#DDDF4B',\n        data: [65, 59, 80, 81, 56]\n      }]\n    });\n  }, []);\n\n  function loadDashProductValue() {\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  function _loadDashProductValue() {\n    _loadDashProductValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              axiosService({\n                method: 'GET',\n                url: '/recycling/mktProductValue',\n                params: {\n                  page: 0,\n                  size: 5\n                }\n              }).then(function (response) {\n                var values = [];\n                var products = [['Produtos', 'Valor']];\n                var resp = [];\n                resp = response.data.listRecyclingProductsValue;\n                console.log(resp);\n                resp.map(function (p) {\n                  products.push([p.product.product, parseFloat(p.averageValue.replace(',', '.'))]);\n                });\n                setData(products);\n                console.log('produtos: ' + products);\n              }).catch(function (error) {});\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadDashProductValue.apply(this, arguments);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerResultFind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: 'Average Rainfall per month',\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: 'right'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default Home; // function googleChart() {\n//     return(\n//             <Chart\n//                             width='300px'\n//                             height='200px'\n//                             chartType=\"BarChart\"\n//                             data={data}\n//                             options={options, {\n//                                 // chartArea: { width: '100%' },\n//                                 // chartArea: { width: '50%', height: '70%' },\n//                                 title: 'Produtos com maior valor ofertado.',\n//                                 width: '200px',\n//                                 height: '200px',\n//                                 // responsive: true,\n//                                 bar: { groupWidth: '50%' },\n//                                 colors: ['#DDDF4B', '#2B4748'],\n//                                 // titlePosition: 'in',\n//                                 // axisTitlesPosition: 'in',\n//                                 // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \n//                                 legend: {position: 'bottom', textStyle: {color: '#2B4748', fontSize: 10}},\n//                                 hAxis: {format: 'currency'},\n//                                 // hAxis: {format: 'R$#,##',},\n//                                 // legend: {display: false}\n//                                 // legend: { width: '10%' },\n//                                 // isStacked: true,\n//                             }}\n//                             rootProps={{ 'data-testid': '3' }}\n//                         />\n//     )\n// }","map":{"version":3,"sources":["C:/Users/juanpapiro/Documents/wspaceweb/mapa-da-reciclagem/src/pages/Home/index.js"],"names":["React","useEffect","useState","Bar","axiosService","Home","title","options","setOptions","data","setData","labels","datasets","label","backgroundColor","state","setState","loadDashProductValue","method","url","params","page","size","then","response","values","products","resp","listRecyclingProductsValue","console","log","map","p","push","product","parseFloat","averageValue","replace","catch","error","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Bar} from 'react-chartjs-2'; \r\n\r\nimport './home.css';\r\nimport { axiosService } from '../../service/axios';\r\n\r\nfunction Home() {\r\n\r\n    const [options, setOptions] = useState({\r\n        title: 'Gráfico de Pizza'\r\n    })\r\n    const [data, setData] = useState([])\r\n    const [state, setState] = useState({\r\n        labels:[],\r\n        datasets:[{\r\n            label:'',\r\n            data:[],\r\n            backgroundColor: '#DDDF4B',\r\n            // borderColor: 'rgba(0,0,0,1)',\r\n            // borderWidth: 2,\r\n        }]\r\n    })\r\n    // const state = {\r\n    //     labels: ['January', 'February', 'March',\r\n    //              'April', 'May'],\r\n    //     datasets: [\r\n    //       {\r\n    //         label: 'Rainfall',\r\n    //         backgroundColor: '#DDDF4B',\r\n    //         // borderColor: 'rgba(0,0,0,1)',\r\n    //         // borderWidth: 2,\r\n    //         data: [65, 59, 80, 81, 56]\r\n    //       }\r\n    //     ]\r\n    //   }\r\n    \r\n    useEffect(() => {\r\n        loadDashProductValue();\r\n        setState({\r\n            labels:['January', 'February', 'March', 'April', 'May'],\r\n            datasets:[{\r\n                backgroundColor: '#DDDF4B',\r\n                data:[65, 59, 80, 81, 56]\r\n            }]\r\n        })\r\n    },[]);\r\n\r\n    async function loadDashProductValue() {\r\n        axiosService({\r\n            method:'GET',\r\n            url:'/recycling/mktProductValue',\r\n            params:{\r\n                page:0,\r\n                size:5\r\n            }\r\n        }).then(response => {\r\n            let values = [];\r\n            let products = [['Produtos', 'Valor']];\r\n            let resp = [];\r\n            resp = response.data.listRecyclingProductsValue;\r\n            \r\n            console.log(resp)\r\n            resp.map(p => {\r\n                products.push([\r\n                    p.product.product,\r\n                    parseFloat(p.averageValue.replace(',', '.'))\r\n                ]);          \r\n            })\r\n            setData(products);\r\n            console.log('produtos: ' + products);\r\n        }).catch(error => {\r\n\r\n        })\r\n    };\r\n\r\n\r\n\r\n\r\n        \r\n    return(\r\n        <div id='containerPage'>\r\n            <div id='containerResultFind'>\r\n                \r\n            <Bar\r\n                data={state}\r\n                options={{\r\n                    title:{\r\n                    display:true,\r\n                    text:'Average Rainfall per month',\r\n                    fontSize:20\r\n                    },\r\n                    legend:{\r\n                    display:true,\r\n                    position:'right'\r\n                    }\r\n                }}\r\n                />\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default Home;\r\n\r\n// function googleChart() {\r\n//     return(\r\n//             <Chart\r\n//                             width='300px'\r\n//                             height='200px'\r\n//                             chartType=\"BarChart\"\r\n//                             data={data}\r\n//                             options={options, {\r\n//                                 // chartArea: { width: '100%' },\r\n//                                 // chartArea: { width: '50%', height: '70%' },\r\n//                                 title: 'Produtos com maior valor ofertado.',\r\n//                                 width: '200px',\r\n//                                 height: '200px',\r\n//                                 // responsive: true,\r\n//                                 bar: { groupWidth: '50%' },\r\n//                                 colors: ['#DDDF4B', '#2B4748'],\r\n//                                 // titlePosition: 'in',\r\n//                                 // axisTitlesPosition: 'in',\r\n//                                 // hAxis: {textPosition: 'in'}, vAxis: {textPosition: 'in'},    \r\n//                                 legend: {position: 'bottom', textStyle: {color: '#2B4748', fontSize: 10}},\r\n//                                 hAxis: {format: 'currency'},\r\n//                                 // hAxis: {format: 'R$#,##',},\r\n//                                 // legend: {display: false}\r\n//                                 // legend: { width: '10%' },\r\n//                                 // isStacked: true,\r\n                                \r\n//                             }}\r\n//                             rootProps={{ 'data-testid': '3' }}\r\n//                         />\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}